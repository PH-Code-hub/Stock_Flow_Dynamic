package stock_flow_sd;

import java.io.Serializable;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Currency;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Random;
import java.util.Set;
import java.util.SortedMap;
import java.util.SortedSet;
import java.util.Stack;
import java.util.Timer;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.Vector;
import java.awt.Color;
import java.awt.Font;
import com.anylogic.engine.connectivity.ResultSet;
import com.anylogic.engine.connectivity.Statement;
import com.anylogic.engine.elements.*;
import com.anylogic.engine.markup.Network;
import com.anylogic.engine.Position;
import com.anylogic.engine.markup.PedFlowStatistics;
import com.anylogic.engine.markup.DensityMap;


import static java.lang.Math.*;
import static com.anylogic.engine.UtilitiesArray.*;
import static com.anylogic.engine.UtilitiesCollection.*;
import static com.anylogic.engine.presentation.UtilitiesColor.*;
import static com.anylogic.engine.HyperArray.*;

import com.anylogic.engine.*;
import com.anylogic.engine.analysis.*;
import com.anylogic.engine.connectivity.*;
import com.anylogic.engine.database.*;
import com.anylogic.engine.gis.*;
import com.anylogic.engine.markup.*;
import com.anylogic.engine.routing.*;
import com.anylogic.engine.presentation.*;
import com.anylogic.engine.gui.*;

import com.anylogic.libraries.modules.markup_descriptors.*;
import com.anylogic.libraries.fluid.*;

import com.querydsl.core.Tuple;
import com.querydsl.sql.SQLBindings;
import static stock_flow_sd.DBDescriptor.*;

import java.awt.geom.Arc2D;

import org.apache.commons.math3.distribution.LogNormalDistribution;
import org.apache.commons.math3.distribution.NormalDistribution; 

/**
 * on destroy<br>
 * this.writeOutput();
 */
public class Main extends Agent
{
  // Excel Files
  public ExcelFile exceloutputFile = new ExcelFile( Main.this, "/stock_flow_sd/", "output550.xlsx", false );

  // Parameters

  public 
double  TransactionTime;

  /**
   * Returns default value for parameter <code>TransactionTime</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _TransactionTime_DefaultValue_xjal() {
    final Main self = this;
    return 
120 
;
  }

  public void set_TransactionTime( double value ) {
    if (value == this.TransactionTime) {
      return;
    }
    double _oldValue_xjal = this.TransactionTime;
    this.TransactionTime = value;
    onChange_TransactionTime_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter TransactionTime.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_TransactionTime()</code> method instead.
   */
  protected void onChange_TransactionTime() {
    onChange_TransactionTime_xjal( TransactionTime );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_TransactionTime_xjal( double oldValue ) {  
  }


  public 
double  BushfireRate;

  /**
   * Returns default value for parameter <code>BushfireRate</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _BushfireRate_DefaultValue_xjal() {
    final Main self = this;
    return 
0.3 
;
  }

  public void set_BushfireRate( double value ) {
    if (value == this.BushfireRate) {
      return;
    }
    double _oldValue_xjal = this.BushfireRate;
    this.BushfireRate = value;
    onChange_BushfireRate_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter BushfireRate.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_BushfireRate()</code> method instead.
   */
  protected void onChange_BushfireRate() {
    onChange_BushfireRate_xjal( BushfireRate );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_BushfireRate_xjal( double oldValue ) {  
  }


  public 
double  C14;

  /**
   * Returns default value for parameter <code>C14</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C14_DefaultValue_xjal() {
    final Main self = this;
    return 
0.05 
;
  }

  public void set_C14( double value ) {
    if (value == this.C14) {
      return;
    }
    double _oldValue_xjal = this.C14;
    this.C14 = value;
    onChange_C14_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C14.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C14()</code> method instead.
   */
  protected void onChange_C14() {
    onChange_C14_xjal( C14 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C14_xjal( double oldValue ) {  
  }


  public 
double  C24;

  /**
   * Returns default value for parameter <code>C24</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C24_DefaultValue_xjal() {
    final Main self = this;
    return 
5 
;
  }

  public void set_C24( double value ) {
    if (value == this.C24) {
      return;
    }
    double _oldValue_xjal = this.C24;
    this.C24 = value;
    onChange_C24_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C24.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C24()</code> method instead.
   */
  protected void onChange_C24() {
    onChange_C24_xjal( C24 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C24_xjal( double oldValue ) {  
  }


  public 
double  C34;

  /**
   * Returns default value for parameter <code>C34</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C34_DefaultValue_xjal() {
    final Main self = this;
    return 
0.6 
;
  }

  public void set_C34( double value ) {
    if (value == this.C34) {
      return;
    }
    double _oldValue_xjal = this.C34;
    this.C34 = value;
    onChange_C34_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C34.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C34()</code> method instead.
   */
  protected void onChange_C34() {
    onChange_C34_xjal( C34 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C34_xjal( double oldValue ) {  
  }


  public 
double  TransactionTime1;

  /**
   * Returns default value for parameter <code>TransactionTime1</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _TransactionTime1_DefaultValue_xjal() {
    final Main self = this;
    return 
20 
;
  }

  public void set_TransactionTime1( double value ) {
    if (value == this.TransactionTime1) {
      return;
    }
    double _oldValue_xjal = this.TransactionTime1;
    this.TransactionTime1 = value;
    onChange_TransactionTime1_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter TransactionTime1.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_TransactionTime1()</code> method instead.
   */
  protected void onChange_TransactionTime1() {
    onChange_TransactionTime1_xjal( TransactionTime1 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_TransactionTime1_xjal( double oldValue ) {  
  }


  /**
   * 1693
   */
  public 
double  AverageBuildingLife;

  /**
   * Returns default value for parameter <code>AverageBuildingLife</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _AverageBuildingLife_DefaultValue_xjal() {
    final Main self = this;
    return 
1705 
;
  }

  public void set_AverageBuildingLife( double value ) {
    if (value == this.AverageBuildingLife) {
      return;
    }
    double _oldValue_xjal = this.AverageBuildingLife;
    this.AverageBuildingLife = value;
    onChange_AverageBuildingLife_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter AverageBuildingLife.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_AverageBuildingLife()</code> method instead.
   */
  protected void onChange_AverageBuildingLife() {
    onChange_AverageBuildingLife_xjal( AverageBuildingLife );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_AverageBuildingLife_xjal( double oldValue ) {  
  }


  public 
double  C36;

  /**
   * Returns default value for parameter <code>C36</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C36_DefaultValue_xjal() {
    final Main self = this;
    return 
0.5 
;
  }

  public void set_C36( double value ) {
    if (value == this.C36) {
      return;
    }
    double _oldValue_xjal = this.C36;
    this.C36 = value;
    onChange_C36_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C36.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C36()</code> method instead.
   */
  protected void onChange_C36() {
    onChange_C36_xjal( C36 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C36_xjal( double oldValue ) {  
  }


  public 
double  C16;

  /**
   * Returns default value for parameter <code>C16</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C16_DefaultValue_xjal() {
    final Main self = this;
    return 
5 
;
  }

  public void set_C16( double value ) {
    if (value == this.C16) {
      return;
    }
    double _oldValue_xjal = this.C16;
    this.C16 = value;
    onChange_C16_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C16.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C16()</code> method instead.
   */
  protected void onChange_C16() {
    onChange_C16_xjal( C16 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C16_xjal( double oldValue ) {  
  }


  public 
double  C26;

  /**
   * Returns default value for parameter <code>C26</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C26_DefaultValue_xjal() {
    final Main self = this;
    return 
0.65 
;
  }

  public void set_C26( double value ) {
    if (value == this.C26) {
      return;
    }
    double _oldValue_xjal = this.C26;
    this.C26 = value;
    onChange_C26_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C26.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C26()</code> method instead.
   */
  protected void onChange_C26() {
    onChange_C26_xjal( C26 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C26_xjal( double oldValue ) {  
  }


  /**
   * 4-5%<br>
   * <br>
   * previous value : 90900
   */
  public 
double  IniVacant;

  /**
   * Returns default value for parameter <code>IniVacant</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _IniVacant_DefaultValue_xjal() {
    final Main self = this;
    return 
10000 
;
  }

  public void set_IniVacant( double value ) {
    if (value == this.IniVacant) {
      return;
    }
    double _oldValue_xjal = this.IniVacant;
    this.IniVacant = value;
    onChange_IniVacant_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter IniVacant.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_IniVacant()</code> method instead.
   */
  protected void onChange_IniVacant() {
    onChange_IniVacant_xjal( IniVacant );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_IniVacant_xjal( double oldValue ) {  
  }


  public 
double  Coefficient;

  /**
   * Returns default value for parameter <code>Coefficient</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _Coefficient_DefaultValue_xjal() {
    final Main self = this;
    return 
0.15 
;
  }

  public void set_Coefficient( double value ) {
    if (value == this.Coefficient) {
      return;
    }
    double _oldValue_xjal = this.Coefficient;
    this.Coefficient = value;
    onChange_Coefficient_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter Coefficient.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_Coefficient()</code> method instead.
   */
  protected void onChange_Coefficient() {
    onChange_Coefficient_xjal( Coefficient );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_Coefficient_xjal( double oldValue ) {  
  }


  public 
double  C01;

  /**
   * Returns default value for parameter <code>C01</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C01_DefaultValue_xjal() {
    final Main self = this;
    return 
0.312 
;
  }

  public void set_C01( double value ) {
    if (value == this.C01) {
      return;
    }
    double _oldValue_xjal = this.C01;
    this.C01 = value;
    onChange_C01_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C01.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C01()</code> method instead.
   */
  protected void onChange_C01() {
    onChange_C01_xjal( C01 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C01_xjal( double oldValue ) {  
  }


  /**
   * 4.1
   */
  public 
double  TimeToAdopt;

  /**
   * Returns default value for parameter <code>TimeToAdopt</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _TimeToAdopt_DefaultValue_xjal() {
    final Main self = this;
    return 
1.778 
;
  }

  public void set_TimeToAdopt( double value ) {
    if (value == this.TimeToAdopt) {
      return;
    }
    double _oldValue_xjal = this.TimeToAdopt;
    this.TimeToAdopt = value;
    onChange_TimeToAdopt_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter TimeToAdopt.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_TimeToAdopt()</code> method instead.
   */
  protected void onChange_TimeToAdopt() {
    onChange_TimeToAdopt_xjal( TimeToAdopt );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_TimeToAdopt_xjal( double oldValue ) {  
  }


  /**
   * 12.1
   */
  public 
double  TimeToAdopt2;

  /**
   * Returns default value for parameter <code>TimeToAdopt2</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _TimeToAdopt2_DefaultValue_xjal() {
    final Main self = this;
    return 
3.47 
;
  }

  public void set_TimeToAdopt2( double value ) {
    if (value == this.TimeToAdopt2) {
      return;
    }
    double _oldValue_xjal = this.TimeToAdopt2;
    this.TimeToAdopt2 = value;
    onChange_TimeToAdopt2_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter TimeToAdopt2.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_TimeToAdopt2()</code> method instead.
   */
  protected void onChange_TimeToAdopt2() {
    onChange_TimeToAdopt2_xjal( TimeToAdopt2 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_TimeToAdopt2_xjal( double oldValue ) {  
  }


  public 
double  C001;

  /**
   * Returns default value for parameter <code>C001</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _C001_DefaultValue_xjal() {
    final Main self = this;
    return 
0.026 
;
  }

  public void set_C001( double value ) {
    if (value == this.C001) {
      return;
    }
    double _oldValue_xjal = this.C001;
    this.C001 = value;
    onChange_C001_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter C001.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_C001()</code> method instead.
   */
  protected void onChange_C001() {
    onChange_C001_xjal( C001 );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_C001_xjal( double oldValue ) {  
  }


  public 
double  a;

  /**
   * Returns default value for parameter <code>a</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _a_DefaultValue_xjal() {
    final Main self = this;
    return 
2.709 
;
  }

  public void set_a( double value ) {
    if (value == this.a) {
      return;
    }
    double _oldValue_xjal = this.a;
    this.a = value;
    onChange_a_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter a.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_a()</code> method instead.
   */
  protected void onChange_a() {
    onChange_a_xjal( a );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_a_xjal( double oldValue ) {  
  }


  public 
double  b;

  /**
   * Returns default value for parameter <code>b</code>.
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  public double _b_DefaultValue_xjal() {
    final Main self = this;
    return 
0.5 
;
  }

  public void set_b( double value ) {
    if (value == this.b) {
      return;
    }
    double _oldValue_xjal = this.b;
    this.b = value;
    onChange_b_xjal( _oldValue_xjal );
    onChange();
  }

  /**
   * Calls "On change" action for parameter b.<br>
   * Note that 'oldValue' in that action will be unavailable if this method is called by user
   * (current parameter value will be passed as 'oldValue').<br>
   * Please call <code>set_b()</code> method instead.
   */
  protected void onChange_b() {
    onChange_b_xjal( b );
  }

  @AnyLogicInternalCodegenAPI
  protected void onChange_b_xjal( double oldValue ) {  
  }


  @Override
  public void setParametersToDefaultValues() {
    super.setParametersToDefaultValues();
    TransactionTime = _TransactionTime_DefaultValue_xjal();
    BushfireRate = _BushfireRate_DefaultValue_xjal();
    C14 = _C14_DefaultValue_xjal();
    C24 = _C24_DefaultValue_xjal();
    C34 = _C34_DefaultValue_xjal();
    TransactionTime1 = _TransactionTime1_DefaultValue_xjal();
    AverageBuildingLife = _AverageBuildingLife_DefaultValue_xjal();
    C36 = _C36_DefaultValue_xjal();
    C16 = _C16_DefaultValue_xjal();
    C26 = _C26_DefaultValue_xjal();
    IniVacant = _IniVacant_DefaultValue_xjal();
    Coefficient = _Coefficient_DefaultValue_xjal();
    C01 = _C01_DefaultValue_xjal();
    TimeToAdopt = _TimeToAdopt_DefaultValue_xjal();
    TimeToAdopt2 = _TimeToAdopt2_DefaultValue_xjal();
    C001 = _C001_DefaultValue_xjal();
    a = _a_DefaultValue_xjal();
    b = _b_DefaultValue_xjal();
  }

  @Override
  public boolean setParameter(String _name_xjal, Object _value_xjal, boolean _callOnChange_xjal) {
    switch ( _name_xjal ) {
    case "TransactionTime":
      if ( _callOnChange_xjal ) {
        set_TransactionTime( ((Number) _value_xjal).doubleValue() );
      } else {
        TransactionTime = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "BushfireRate":
      if ( _callOnChange_xjal ) {
        set_BushfireRate( ((Number) _value_xjal).doubleValue() );
      } else {
        BushfireRate = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C14":
      if ( _callOnChange_xjal ) {
        set_C14( ((Number) _value_xjal).doubleValue() );
      } else {
        C14 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C24":
      if ( _callOnChange_xjal ) {
        set_C24( ((Number) _value_xjal).doubleValue() );
      } else {
        C24 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C34":
      if ( _callOnChange_xjal ) {
        set_C34( ((Number) _value_xjal).doubleValue() );
      } else {
        C34 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "TransactionTime1":
      if ( _callOnChange_xjal ) {
        set_TransactionTime1( ((Number) _value_xjal).doubleValue() );
      } else {
        TransactionTime1 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "AverageBuildingLife":
      if ( _callOnChange_xjal ) {
        set_AverageBuildingLife( ((Number) _value_xjal).doubleValue() );
      } else {
        AverageBuildingLife = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C36":
      if ( _callOnChange_xjal ) {
        set_C36( ((Number) _value_xjal).doubleValue() );
      } else {
        C36 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C16":
      if ( _callOnChange_xjal ) {
        set_C16( ((Number) _value_xjal).doubleValue() );
      } else {
        C16 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C26":
      if ( _callOnChange_xjal ) {
        set_C26( ((Number) _value_xjal).doubleValue() );
      } else {
        C26 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "IniVacant":
      if ( _callOnChange_xjal ) {
        set_IniVacant( ((Number) _value_xjal).doubleValue() );
      } else {
        IniVacant = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "Coefficient":
      if ( _callOnChange_xjal ) {
        set_Coefficient( ((Number) _value_xjal).doubleValue() );
      } else {
        Coefficient = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C01":
      if ( _callOnChange_xjal ) {
        set_C01( ((Number) _value_xjal).doubleValue() );
      } else {
        C01 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "TimeToAdopt":
      if ( _callOnChange_xjal ) {
        set_TimeToAdopt( ((Number) _value_xjal).doubleValue() );
      } else {
        TimeToAdopt = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "TimeToAdopt2":
      if ( _callOnChange_xjal ) {
        set_TimeToAdopt2( ((Number) _value_xjal).doubleValue() );
      } else {
        TimeToAdopt2 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "C001":
      if ( _callOnChange_xjal ) {
        set_C001( ((Number) _value_xjal).doubleValue() );
      } else {
        C001 = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "a":
      if ( _callOnChange_xjal ) {
        set_a( ((Number) _value_xjal).doubleValue() );
      } else {
        a = ((Number) _value_xjal).doubleValue();
      }
      return true;
    case "b":
      if ( _callOnChange_xjal ) {
        set_b( ((Number) _value_xjal).doubleValue() );
      } else {
        b = ((Number) _value_xjal).doubleValue();
      }
      return true;
    default:
      return super.setParameter( _name_xjal, _value_xjal, _callOnChange_xjal );
    }
  }

  @Override
  public <T> T getParameter(String _name_xjal) {
    Object _result_xjal;
    switch ( _name_xjal ) {
    case "TransactionTime": _result_xjal = TransactionTime; break;
    case "BushfireRate": _result_xjal = BushfireRate; break;
    case "C14": _result_xjal = C14; break;
    case "C24": _result_xjal = C24; break;
    case "C34": _result_xjal = C34; break;
    case "TransactionTime1": _result_xjal = TransactionTime1; break;
    case "AverageBuildingLife": _result_xjal = AverageBuildingLife; break;
    case "C36": _result_xjal = C36; break;
    case "C16": _result_xjal = C16; break;
    case "C26": _result_xjal = C26; break;
    case "IniVacant": _result_xjal = IniVacant; break;
    case "Coefficient": _result_xjal = Coefficient; break;
    case "C01": _result_xjal = C01; break;
    case "TimeToAdopt": _result_xjal = TimeToAdopt; break;
    case "TimeToAdopt2": _result_xjal = TimeToAdopt2; break;
    case "C001": _result_xjal = C001; break;
    case "a": _result_xjal = a; break;
    case "b": _result_xjal = b; break;
    default: _result_xjal = super.getParameter( _name_xjal ); break;
    }
    return (T) _result_xjal;
  }

  @AnyLogicInternalCodegenAPI
  private static String[] _parameterNames_xjal;

  @Override
  public String[] getParameterNames() {
    String[] result = _parameterNames_xjal;
    if (result == null) {
      List<String> list = new ArrayList<>( Arrays.asList( super.getParameterNames() ) );
      list.add( "TransactionTime" );
      list.add( "BushfireRate" );
      list.add( "C14" );
      list.add( "C24" );
      list.add( "C34" );
      list.add( "TransactionTime1" );
      list.add( "AverageBuildingLife" );
      list.add( "C36" );
      list.add( "C16" );
      list.add( "C26" );
      list.add( "IniVacant" );
      list.add( "Coefficient" );
      list.add( "C01" );
      list.add( "TimeToAdopt" );
      list.add( "TimeToAdopt2" );
      list.add( "C001" );
      list.add( "a" );
      list.add( "b" );
      result = list.toArray( new String[ list.size() ] );
      _parameterNames_xjal = result;
    }
    return result;
  }

  // Dynamic (Flow/Auxiliary/Stock) Variables

  public double ConstructionStartRate;

  /**
   * CRate(ConstructionCompletionRateABS(time()),delay(ConstructionStartRate,12)) 
   */
  public double ConsCompleRate;

  public double Demolition;

  public double SalesPriceChange;

  public double RentPriceChange;

  public double Demolition1;

  public double Rate1;

  public double Rate2;

  public double OctoDi1;

  public double RetoDi2;

  public double Discharge_effect;

  public double Out;

  public double OwnershipDemand;

  public double PotentialOwner;

  public double NormalRent;

  public double RentalDemand;

  public double OwnershipCost;

  public double C32;

  public double C12;

  public double C22;

  public double RentImpact;

  public double NormalPrice;

  public double AvgLife;

  public double SalesSupply;

  public double RentalSupply;

  public double DispIncome;

  public double Householdsize;

  public double C00;

  public double Coef;

  public double InitialOwnershipCost;

  public double SupplyCoef;

  public double AverageOwnershiptime;

  public double Vout1;

  public double Vout2;

  public double AverageRentalStay;

  public double OwningRatio;

  public double C000;

  public double OW;

  public double SW;

  public double Population;

  public double OCgrowth;

  /**
   * normInvCDF
   */
  public double STD;

  public double IncomeTrend;

  public double Productivity;

  public double GDP_Differene;

  public double CL;

  public double Supply_Function;

  public double Total_Occ;

  public double Demolish;

  public double OC_Real_Out;

  /**
   * Rate(homi(time()),lognormal_cdf(log(1000*IncomeTrend/RentPrice),STD,0.39)+0.0043,171)
   */
  public double homelesness_ratio;

  public double CC;

  public double PUncertainty;

  /**
   * Insurance_Premium_1(time())
   */
  public double OCgrowth1;

  public double c;

  public double d;

  public double cd;

  public double Vacant;

  public double UnderConstruction;

  public double Occupied;

  public double SalesPrice;

  public double RentPrice;

  public double Rented;
  /**
   * Writes model variables into given arrays
   */
  @AnyLogicInternalCodegenAPI
  public void getPhaseVector_xjal(double[] _d_xjal, int _d_idx_xjal, double[] _a_xjal, int _a_idx_xjal) {
    _d_xjal[ _d_idx_xjal + 0 ] = Vacant;
    _d_xjal[ _d_idx_xjal + 1 ] = UnderConstruction;
    _d_xjal[ _d_idx_xjal + 2 ] = Occupied;
    _d_xjal[ _d_idx_xjal + 3 ] = SalesPrice;
    _d_xjal[ _d_idx_xjal + 4 ] = RentPrice;
    _d_xjal[ _d_idx_xjal + 5 ] = Rented;
    _d_idx_xjal += 6;
    super.getPhaseVector_xjal(_d_xjal, _d_idx_xjal, _a_xjal, _a_idx_xjal);
  }
  /**
   * Writes given arrays to model variables
   */
  @AnyLogicInternalCodegenAPI
  public void putPhaseVector_xjal(double[] _d_xjal, int _d_idx_xjal, double[] _a_xjal, int _a_idx_xjal) {
    Vacant = _d_xjal[ _d_idx_xjal + 0 ];
    UnderConstruction = _d_xjal[ _d_idx_xjal + 1 ];
    Occupied = _d_xjal[ _d_idx_xjal + 2 ];
    SalesPrice = _d_xjal[ _d_idx_xjal + 3 ];
    RentPrice = _d_xjal[ _d_idx_xjal + 4 ];
    Rented = _d_xjal[ _d_idx_xjal + 5 ];
    _d_idx_xjal += 6;
    super.putPhaseVector_xjal(_d_xjal, _d_idx_xjal, _a_xjal, _a_idx_xjal);
  }
  @AnyLogicInternalCodegenAPI
  public void assignInitialConditions_xjal() {
	super.assignInitialConditions_xjal(); 
    _assign_NormalPrice_Formula_xjal();
    _assign_NormalRent_Formula_xjal();
    _assign_OCgrowth_Formula_xjal();
    _assign_IncomeTrend_Formula_xjal();
    _assign_OCgrowth1_Formula_xjal();
    _assign_SalesPrice_Formula_xjal();
    _assign_OwnershipCost_Formula_xjal();
    _assign_DispIncome_Formula_xjal();
    _assign_InitialOwnershipCost_Formula_xjal();
    _assign_AverageOwnershiptime_Formula_xjal();
    _assign_AverageRentalStay_Formula_xjal();
    _assign_Occupied_Formula_xjal();
    _assign_RentPrice_Formula_xjal();
    _assign_Rented_Formula_xjal();
    _assign_OctoDi1_Formula_xjal();
    _assign_RetoDi2_Formula_xjal();
    _assign_RentImpact_Formula_xjal();
    _assign_Householdsize_Formula_xjal();
    _assign_SupplyCoef_Formula_xjal();
    _assign_Population_Formula_xjal();
    _assign_STD_Formula_xjal();
    _assign_c_Formula_xjal();
    _assign_d_Formula_xjal();
    _assign_PotentialOwner_Formula_xjal();
    _assign_AvgLife_Formula_xjal();
    _assign_Vout1_Formula_xjal();
    _assign_Vout2_Formula_xjal();
    _assign_OW_Formula_xjal();
    _assign_SW_Formula_xjal();
    _assign_homelesness_ratio_Formula_xjal();
    _assign_cd_Formula_xjal();
    _assign_Vacant_Formula_xjal();
    _assign_Demolition_Formula_xjal();
    _assign_Demolition1_Formula_xjal();
    _assign_RentalDemand_Formula_xjal();
    _assign_SalesSupply_Formula_xjal();
    _assign_Coef_Formula_xjal();
    _assign_OwnershipDemand_Formula_xjal();
    _assign_RentalSupply_Formula_xjal();
    _assign_Productivity_Formula_xjal();
    _assign_GDP_Differene_Formula_xjal();
    _assign_CL_Formula_xjal();
    _assign_Total_Occ_Formula_xjal();
    _assign_Demolish_Formula_xjal();
    _assign_CC_Formula_xjal();
    _assign_PUncertainty_Formula_xjal();
    _assign_Rate1_Formula_xjal();
    _assign_Rate2_Formula_xjal();
    _assign_C00_Formula_xjal();
    _assign_Supply_Function_Formula_xjal();
    _assign_UnderConstruction_Formula_xjal();
    _assign_ConstructionStartRate_Formula_xjal();
    _assign_ConsCompleRate_Formula_xjal();
    _assign_SalesPriceChange_Formula_xjal();
    _assign_RentPriceChange_Formula_xjal();
    _assign_Discharge_effect_Formula_xjal();
    _assign_Out_Formula_xjal();
    _assign_C32_Formula_xjal();
    _assign_C12_Formula_xjal();
    _assign_C22_Formula_xjal();
    _assign_OwningRatio_Formula_xjal();
    _assign_C000_Formula_xjal();
    _assign_OC_Real_Out_Formula_xjal();
  }

  @AnyLogicInternalCodegenAPI
  public void setupInitialConditions_xjal(Class<?> callerClass) {
    if (callerClass != Main.class) {
      return;
    }
    if (getInitialAlgebraicFlatEquationsCount_xjal() > 0) {
      SDIntegrationManager integrationManagerForInitialConditions = new SDIntegrationManager( 0, getInitialAlgebraicFlatEquationsCount_xjal(), getInitialFormulaFlatEquationsCount_xjal() );
      integrationManagerForInitialConditions.doStep( this, 0, 0.1, true );
    } else {
      assignInitialConditions_xjal();
    } 
  }
  
  @AnyLogicInternalCodegenAPI
  public void _assign_NormalPrice_Formula_xjal() {
    NormalPrice = 
PriceABS(0) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_NormalRent_Formula_xjal() {
    NormalRent = 
Rent(0) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OCgrowth_Formula_xjal() {
    OCgrowth = 
SSP5_INP1(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_IncomeTrend_Formula_xjal() {
    IncomeTrend = 
SSP5_Income1(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OCgrowth1_Formula_xjal() {
    OCgrowth1 = 
OCgrowthInsuranceExtreme1(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_SalesPrice_Formula_xjal() {
    SalesPrice = 
NormalPrice 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OwnershipCost_Formula_xjal() {
    OwnershipCost = 
Rate(OC(time()) * SalesPrice,(0.7 * OC(time()) * SalesPrice + 0.3 * OC(171) * OCgrowth* PriceABS(171)) * OCgrowth1,171) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_DispIncome_Formula_xjal() {
    DispIncome = 
IncomeTrend 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_InitialOwnershipCost_Formula_xjal() {
    InitialOwnershipCost = 
OC(0) * PriceABS(0) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_AverageOwnershiptime_Formula_xjal() {
    AverageOwnershiptime = 
TransactionTime 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_AverageRentalStay_Formula_xjal() {
    AverageRentalStay = 
TransactionTime1 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Occupied_Formula_xjal() {
    Occupied = 
OccupiedABS(0)*1000 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_RentPrice_Formula_xjal() {
    RentPrice = 
NormalRent 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Rented_Formula_xjal() {
    Rented = 
RentedABS(0)*1000 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OctoDi1_Formula_xjal() {
    OctoDi1 = 
Occupied / AverageOwnershiptime 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_RetoDi2_Formula_xjal() {
    RetoDi2 = 
Rented / AverageRentalStay 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_RentImpact_Formula_xjal() {
    RentImpact = 
(1 - C36 + C36 / (1 + exp(-C16 * (RentPrice / OwnershipCost - C26)))) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Householdsize_Formula_xjal() {
    Householdsize = 
HouseholdSizeABS(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_SupplyCoef_Formula_xjal() {
    SupplyCoef = 
(C34 / (1 + exp(-C14 * (SalesPrice / RentPrice - C24)))) + 0.9 - C34 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Population_Formula_xjal() {
    Population = 
SSP5_Pop1(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_STD_Formula_xjal() {
    STD = 
sqrt(2) * normal_inverse((1 + SSP5_GINI(time()) / 100) / 2) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_c_Formula_xjal() {
    c = 
(DispIncome / SSP1_Income2(0)) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_d_Formula_xjal() {
    d = 
(InitialOwnershipCost / OwnershipCost) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_PotentialOwner_Formula_xjal() {
    PotentialOwner = 
((Population / Householdsize) - Occupied - Rented) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_AvgLife_Formula_xjal() {
    AvgLife = 
AverageBuildingLife 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Vout1_Formula_xjal() {
    Vout1 = 
OctoDi1 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Vout2_Formula_xjal() {
    Vout2 = 
RetoDi2 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OW_Formula_xjal() {
    OW = 
((RentImpact / TransactionTime) / ((RentImpact / TransactionTime) + ((1 - RentImpact) / TransactionTime1))) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_SW_Formula_xjal() {
    SW = 
((SupplyCoef / TransactionTime) / ((SupplyCoef / TransactionTime) + ((1 - SupplyCoef) / TransactionTime1))) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_homelesness_ratio_Formula_xjal() {
    homelesness_ratio = 
lognormal_cdf(log(1000 * IncomeTrend / RentPrice),STD,0.39) + 0.0043 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_cd_Formula_xjal() {
    cd = 
c * d 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Vacant_Formula_xjal() {
    Vacant = 
IniVacant 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Demolition_Formula_xjal() {
    Demolition = 
Occupied / AverageBuildingLife 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Demolition1_Formula_xjal() {
    Demolition1 = 
Rented / AvgLife 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_RentalDemand_Formula_xjal() {
    RentalDemand = 
(Vout2 + (((Vout1 + Vout2) - OW * (Vout1 + Vout2)) - Vout2) / TimeToAdopt + (PotentialOwner) * (1 - OW)) - PotentialOwner * homelesness_ratio 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_SalesSupply_Formula_xjal() {
    SalesSupply = 
Vout1 + (SW * (Vout1 + Vout2) - Vout1) / TimeToAdopt2 + Vacant * SW 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Coef_Formula_xjal() {
    Coef = 
1 + Coefficient / (1 + exp(-a * (cd) - b)) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OwnershipDemand_Formula_xjal() {
    OwnershipDemand = 
(PotentialOwner + Vout1 + Vout2 - RentalDemand - PotentialOwner * homelesness_ratio) * Coef 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_RentalSupply_Formula_xjal() {
    RentalSupply = 
max((Vacant + Vout1 + Vout2 - SalesSupply),0) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Productivity_Formula_xjal() {
    Productivity = 
PSSP5(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_GDP_Differene_Formula_xjal() {
    GDP_Differene = 
GDPSSP51(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_CL_Formula_xjal() {
    CL = 
CL5(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Total_Occ_Formula_xjal() {
    Total_Occ = 
Rented + Occupied 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Demolish_Formula_xjal() {
    Demolish = 
Demolition + Demolition1 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_CC_Formula_xjal() {
    CC = 
Construction_Cost_1(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_PUncertainty_Formula_xjal() {
    PUncertainty = 
Productivity_Uncertainty_3(time()) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Rate1_Formula_xjal() {
    Rate1 = 
min(OwnershipDemand,SalesSupply) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Rate2_Formula_xjal() {
    Rate2 = 
min(RentalDemand,RentalSupply) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_C00_Formula_xjal() {
    C00 = 
C01 / 100 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Supply_Function_Formula_xjal() {
    Supply_Function = 
(CL - Total_Occ / 1300 + Demolish / 1300) * (pow(PUncertainty * Productivity,1.44927)) * (pow((110000 * CC + 2.2 * GDP_Differene / 15000000) / (0.31 * SalesPrice),-0.44927)) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_UnderConstruction_Formula_xjal() {
    UnderConstruction = 
160000 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_ConstructionStartRate_Formula_xjal() {
    ConstructionStartRate = 
CRate10(ConstructionStartRateABS(time()),Supply_Function * 3) / 3 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_ConsCompleRate_Formula_xjal() {
    ConsCompleRate = 
UnderConstruction / 12 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_SalesPriceChange_Formula_xjal() {
    SalesPriceChange = 
max(-SalesPrice,C00 * SalesPrice * (log(max(0.01,OwnershipDemand) / max(SalesSupply,0.01)))) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_RentPriceChange_Formula_xjal() {
    RentPriceChange = 
max(-RentPrice,C00 * RentPrice * (log((0.01 + RentalDemand) / (0.01 + RentalSupply)))) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Discharge_effect_Formula_xjal() {
    Discharge_effect = 
Vout1 + Vout2 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_Out_Formula_xjal() {
    Out = 
Rate1 + Rate2 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_C32_Formula_xjal() {
    C32 = 
C34 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_C12_Formula_xjal() {
    C12 = 
C14 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_C22_Formula_xjal() {
    C22 = 
C24 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OwningRatio_Formula_xjal() {
    OwningRatio = 
Occupied / (Rented + Occupied) 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_C000_Formula_xjal() {
    C000 = 
C001 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _assign_OC_Real_Out_Formula_xjal() {
    OC_Real_Out = 
OwnershipCost / SalesPrice 
;
  }
  @AnyLogicInternalCodegenAPI
  public void formulasExecute_xjal() {
    super.formulasExecute_xjal();
    _assign_OCgrowth_Formula_xjal();
    _assign_IncomeTrend_Formula_xjal();
    _assign_OCgrowth1_Formula_xjal();
    _assign_OwnershipCost_Formula_xjal();
    _assign_DispIncome_Formula_xjal();
    _assign_InitialOwnershipCost_Formula_xjal();
    _assign_AverageOwnershiptime_Formula_xjal();
    _assign_AverageRentalStay_Formula_xjal();
    _assign_OctoDi1_Formula_xjal();
    _assign_RetoDi2_Formula_xjal();
    _assign_RentImpact_Formula_xjal();
    _assign_Householdsize_Formula_xjal();
    _assign_SupplyCoef_Formula_xjal();
    _assign_Population_Formula_xjal();
    _assign_STD_Formula_xjal();
    _assign_c_Formula_xjal();
    _assign_d_Formula_xjal();
    _assign_PotentialOwner_Formula_xjal();
    _assign_AvgLife_Formula_xjal();
    _assign_Vout1_Formula_xjal();
    _assign_Vout2_Formula_xjal();
    _assign_OW_Formula_xjal();
    _assign_SW_Formula_xjal();
    _assign_homelesness_ratio_Formula_xjal();
    _assign_cd_Formula_xjal();
    _assign_Demolition_Formula_xjal();
    _assign_Demolition1_Formula_xjal();
    _assign_RentalDemand_Formula_xjal();
    _assign_SalesSupply_Formula_xjal();
    _assign_Coef_Formula_xjal();
    _assign_OwnershipDemand_Formula_xjal();
    _assign_RentalSupply_Formula_xjal();
    _assign_Productivity_Formula_xjal();
    _assign_GDP_Differene_Formula_xjal();
    _assign_CL_Formula_xjal();
    _assign_Total_Occ_Formula_xjal();
    _assign_Demolish_Formula_xjal();
    _assign_CC_Formula_xjal();
    _assign_PUncertainty_Formula_xjal();
    _assign_Rate1_Formula_xjal();
    _assign_Rate2_Formula_xjal();
    _assign_C00_Formula_xjal();
    _assign_Supply_Function_Formula_xjal();
    _assign_ConstructionStartRate_Formula_xjal();
    _assign_ConsCompleRate_Formula_xjal();
    _assign_SalesPriceChange_Formula_xjal();
    _assign_RentPriceChange_Formula_xjal();
    _assign_Discharge_effect_Formula_xjal();
    _assign_Out_Formula_xjal();
    _assign_NormalRent_Formula_xjal();
    _assign_C32_Formula_xjal();
    _assign_C12_Formula_xjal();
    _assign_C22_Formula_xjal();
    _assign_NormalPrice_Formula_xjal();
    _assign_OwningRatio_Formula_xjal();
    _assign_C000_Formula_xjal();
    _assign_OC_Real_Out_Formula_xjal(); 
  }

  @AnyLogicInternalCodegenAPI
  public void getRightPart_xjal( double[] _d_xjal, int _d_idx_xjal, double[] _a_xjal, int _a_idx_xjal ) {
    _get_Vacant_Derivative_xjal( _d_xjal, _d_idx_xjal + 0 );
    _get_UnderConstruction_Derivative_xjal( _d_xjal, _d_idx_xjal + 1 );
    _get_Occupied_Derivative_xjal( _d_xjal, _d_idx_xjal + 2 );
    _get_SalesPrice_Derivative_xjal( _d_xjal, _d_idx_xjal + 3 );
    _get_RentPrice_Derivative_xjal( _d_xjal, _d_idx_xjal + 4 );
    _get_Rented_Derivative_xjal( _d_xjal, _d_idx_xjal + 5 );
    _d_idx_xjal += 6; 
	super.getRightPart_xjal( _d_xjal, _d_idx_xjal, _a_xjal, _a_idx_xjal );
  }

  @AnyLogicInternalCodegenAPI
  public void _get_Vacant_Derivative_xjal( double[] _d_xjal, int _d_idx_xjal ) {
    _d_xjal[ _d_idx_xjal ] = 
+ConsCompleRate + Discharge_effect - Out 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _get_UnderConstruction_Derivative_xjal( double[] _d_xjal, int _d_idx_xjal ) {
    _d_xjal[ _d_idx_xjal ] = 
+ConstructionStartRate - ConsCompleRate 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _get_Occupied_Derivative_xjal( double[] _d_xjal, int _d_idx_xjal ) {
    _d_xjal[ _d_idx_xjal ] = 
+Rate1 - Demolition - OctoDi1 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _get_SalesPrice_Derivative_xjal( double[] _d_xjal, int _d_idx_xjal ) {
    _d_xjal[ _d_idx_xjal ] = 
+SalesPriceChange 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _get_RentPrice_Derivative_xjal( double[] _d_xjal, int _d_idx_xjal ) {
    _d_xjal[ _d_idx_xjal ] = 
+RentPriceChange 
;
  }
  @AnyLogicInternalCodegenAPI
  public void _get_Rented_Derivative_xjal( double[] _d_xjal, int _d_idx_xjal ) {
    _d_xjal[ _d_idx_xjal ] = 
+Rate2 - Demolition1 - RetoDi2 
;
  }
  @AnyLogicInternalCodegenAPI
  protected SDIntegrationManager integrationManager_xjal = null;
  
  @AnyLogicInternalCodegenAPI
  public SDIntegrationManager getIntegrationManager_xjal() {
    if (integrationManager_xjal == null) {
      integrationManager_xjal = new SDIntegrationManager( getDifferentialFlatEquationsCount_xjal(), getRuntimeAlgebraicFlatEquationsCount_xjal(), getRuntimeFormulaFlatEquationsCount_xjal() );
    }
    return integrationManager_xjal;
  }
  
  @Override
  @AnyLogicInternalCodegenAPI
  public int getDifferentialFlatEquationsCount_xjal() {
    return super.getDifferentialFlatEquationsCount_xjal() + 6;
  }
  
  @Override
  @AnyLogicInternalCodegenAPI
  public int getRuntimeFormulaFlatEquationsCount_xjal() {
    return super.getRuntimeFormulaFlatEquationsCount_xjal() + 57;
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public int getInitialFormulaFlatEquationsCount_xjal() {
    return super.getInitialFormulaFlatEquationsCount_xjal() + 63;
  }

  @AnyLogicInternalCodegenAPI
  private static Map<String, IElementDescriptor> elementDesciptors_xjal = createElementDescriptors( Main.class );
  
  @AnyLogicInternalCodegenAPI
  @Override
  public Map<String, IElementDescriptor> getElementDesciptors() {
    return elementDesciptors_xjal;
  }
  @AnyLogicCustomProposalPriority(type = AnyLogicCustomProposalPriority.Type.STATIC_ELEMENT)
  public static final Scale scale = new Scale( 10.0 );

  @Override
  public Scale getScale() {
    return scale;
  }


  // Events
	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Real_Num_Dwellings1_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _RealPrice_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _SimulatedPrice_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _RealRent_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _RealRented_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _RealOccupied_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _RealConstructionStartRateABS_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _SimulatedConstructionStartRate_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _SimulatedRent_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _SupplySalesdata_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _OwnershipDemanddata_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _SupplyRentdata_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _RentalDemanddata_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _SimulatedOccupied_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _SimulatedRented_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Simlationpop_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _NumUnits_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Demolition_Data_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _OC_Out_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Disp_Income_Out_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Homeless_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Vacant00_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Average_Income_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _STD_Income_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _Incomeoverownership_autoUpdateEvent_xjal = new EventTimeout(this);	
  @AnyLogicInternalCodegenAPI
  public EventTimeout _autoCreatedDS_xjal = new EventTimeout(this);

  @Override
  @AnyLogicInternalCodegenAPI
  public String getNameOf( EventTimeout _e ) {
     if( _e == _Real_Num_Dwellings1_autoUpdateEvent_xjal ) return "Real_Num_Dwellings1 auto update event";
     if( _e == _RealPrice_autoUpdateEvent_xjal ) return "RealPrice auto update event";
     if( _e == _SimulatedPrice_autoUpdateEvent_xjal ) return "SimulatedPrice auto update event";
     if( _e == _RealRent_autoUpdateEvent_xjal ) return "RealRent auto update event";
     if( _e == _RealRented_autoUpdateEvent_xjal ) return "RealRented auto update event";
     if( _e == _RealOccupied_autoUpdateEvent_xjal ) return "RealOccupied auto update event";
     if( _e == _RealConstructionStartRateABS_autoUpdateEvent_xjal ) return "RealConstructionStartRateABS auto update event";
     if( _e == _SimulatedConstructionStartRate_autoUpdateEvent_xjal ) return "SimulatedConstructionStartRate auto update event";
     if( _e == _SimulatedRent_autoUpdateEvent_xjal ) return "SimulatedRent auto update event";
     if( _e == _SupplySalesdata_autoUpdateEvent_xjal ) return "SupplySalesdata auto update event";
     if( _e == _OwnershipDemanddata_autoUpdateEvent_xjal ) return "OwnershipDemanddata auto update event";
     if( _e == _SupplyRentdata_autoUpdateEvent_xjal ) return "SupplyRentdata auto update event";
     if( _e == _RentalDemanddata_autoUpdateEvent_xjal ) return "RentalDemanddata auto update event";
     if( _e == _SimulatedOccupied_autoUpdateEvent_xjal ) return "SimulatedOccupied auto update event";
     if( _e == _SimulatedRented_autoUpdateEvent_xjal ) return "SimulatedRented auto update event";
     if( _e == _Simlationpop_autoUpdateEvent_xjal ) return "Simlationpop auto update event";
     if( _e == _NumUnits_autoUpdateEvent_xjal ) return "NumUnits auto update event";
     if( _e == _Demolition_Data_autoUpdateEvent_xjal ) return "Demolition_Data auto update event";
     if( _e == _OC_Out_autoUpdateEvent_xjal ) return "OC_Out auto update event";
     if( _e == _Disp_Income_Out_autoUpdateEvent_xjal ) return "Disp_Income_Out auto update event";
     if( _e == _Homeless_autoUpdateEvent_xjal ) return "Homeless auto update event";
     if( _e == _Vacant00_autoUpdateEvent_xjal ) return "Vacant00 auto update event";
     if( _e == _Average_Income_autoUpdateEvent_xjal ) return "Average_Income auto update event";
     if( _e == _STD_Income_autoUpdateEvent_xjal ) return "STD_Income auto update event";
     if( _e == _Incomeoverownership_autoUpdateEvent_xjal ) return "Incomeoverownership auto update event";
     if( _e == _autoCreatedDS_xjal ) return "Auto-created DataSets auto update event";
    return super.getNameOf( _e );
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public EventTimeout.Mode getModeOf( EventTimeout _e ) {
    if ( _e == _Real_Num_Dwellings1_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _RealPrice_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _SimulatedPrice_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _RealRent_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _RealRented_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _RealOccupied_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _RealConstructionStartRateABS_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _SimulatedConstructionStartRate_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _SimulatedRent_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _SupplySalesdata_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _OwnershipDemanddata_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _SupplyRentdata_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _RentalDemanddata_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _SimulatedOccupied_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _SimulatedRented_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _Simlationpop_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _NumUnits_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _Demolition_Data_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _OC_Out_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _Disp_Income_Out_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _Homeless_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _Vacant00_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _Average_Income_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _STD_Income_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _Incomeoverownership_autoUpdateEvent_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    if ( _e == _autoCreatedDS_xjal ) return EVENT_TIMEOUT_MODE_CYCLIC;
    return super.getModeOf( _e );
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public double getFirstOccurrenceTime( EventTimeout _e ) {
    double _t;
    if ( _e == _Real_Num_Dwellings1_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _RealPrice_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _SimulatedPrice_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _RealRent_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _RealRented_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _RealOccupied_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _RealConstructionStartRateABS_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _SimulatedConstructionStartRate_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _SimulatedRent_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _SupplySalesdata_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _OwnershipDemanddata_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _SupplyRentdata_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _RentalDemanddata_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _SimulatedOccupied_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _SimulatedRented_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _Simlationpop_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _NumUnits_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _Demolition_Data_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _OC_Out_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _Disp_Income_Out_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _Homeless_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _Vacant00_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _Average_Income_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _STD_Income_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _Incomeoverownership_autoUpdateEvent_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if ( _e == _autoCreatedDS_xjal ) {
      _t = 
0 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    return super.getFirstOccurrenceTime( _e );
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public double evaluateTimeoutOf( EventTimeout _e ) {
    double _t;
    if( _e == _Real_Num_Dwellings1_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _RealPrice_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _SimulatedPrice_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _RealRent_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _RealRented_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _RealOccupied_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _RealConstructionStartRateABS_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _SimulatedConstructionStartRate_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _SimulatedRent_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _SupplySalesdata_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _OwnershipDemanddata_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _SupplyRentdata_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _RentalDemanddata_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _SimulatedOccupied_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _SimulatedRented_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _Simlationpop_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _NumUnits_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _Demolition_Data_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _OC_Out_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _Disp_Income_Out_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _Homeless_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _Vacant00_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _Average_Income_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _STD_Income_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _Incomeoverownership_autoUpdateEvent_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    if( _e == _autoCreatedDS_xjal) {
      _t = 
1 
;
      _t = toModelTime( _t, SECOND );
      return _t;
    }
    return super.evaluateTimeoutOf( _e );
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public void executeActionOf( EventTimeout _e ) {
    if ( _e == _Real_Num_Dwellings1_autoUpdateEvent_xjal ) {
      Real_Num_Dwellings1.update();
      return;
    }
    if ( _e == _RealPrice_autoUpdateEvent_xjal ) {
      RealPrice.update();
      return;
    }
    if ( _e == _SimulatedPrice_autoUpdateEvent_xjal ) {
      SimulatedPrice.update();
      return;
    }
    if ( _e == _RealRent_autoUpdateEvent_xjal ) {
      RealRent.update();
      return;
    }
    if ( _e == _RealRented_autoUpdateEvent_xjal ) {
      RealRented.update();
      return;
    }
    if ( _e == _RealOccupied_autoUpdateEvent_xjal ) {
      RealOccupied.update();
      return;
    }
    if ( _e == _RealConstructionStartRateABS_autoUpdateEvent_xjal ) {
      RealConstructionStartRateABS.update();
      return;
    }
    if ( _e == _SimulatedConstructionStartRate_autoUpdateEvent_xjal ) {
      SimulatedConstructionStartRate.update();
      return;
    }
    if ( _e == _SimulatedRent_autoUpdateEvent_xjal ) {
      SimulatedRent.update();
      return;
    }
    if ( _e == _SupplySalesdata_autoUpdateEvent_xjal ) {
      SupplySalesdata.update();
      return;
    }
    if ( _e == _OwnershipDemanddata_autoUpdateEvent_xjal ) {
      OwnershipDemanddata.update();
      return;
    }
    if ( _e == _SupplyRentdata_autoUpdateEvent_xjal ) {
      SupplyRentdata.update();
      return;
    }
    if ( _e == _RentalDemanddata_autoUpdateEvent_xjal ) {
      RentalDemanddata.update();
      return;
    }
    if ( _e == _SimulatedOccupied_autoUpdateEvent_xjal ) {
      SimulatedOccupied.update();
      return;
    }
    if ( _e == _SimulatedRented_autoUpdateEvent_xjal ) {
      SimulatedRented.update();
      return;
    }
    if ( _e == _Simlationpop_autoUpdateEvent_xjal ) {
      Simlationpop.update();
      return;
    }
    if ( _e == _NumUnits_autoUpdateEvent_xjal ) {
      NumUnits.update();
      return;
    }
    if ( _e == _Demolition_Data_autoUpdateEvent_xjal ) {
      Demolition_Data.update();
      return;
    }
    if ( _e == _OC_Out_autoUpdateEvent_xjal ) {
      OC_Out.update();
      return;
    }
    if ( _e == _Disp_Income_Out_autoUpdateEvent_xjal ) {
      Disp_Income_Out.update();
      return;
    }
    if ( _e == _Homeless_autoUpdateEvent_xjal ) {
      Homeless.update();
      return;
    }
    if ( _e == _Vacant00_autoUpdateEvent_xjal ) {
      Vacant00.update();
      return;
    }
    if ( _e == _Average_Income_autoUpdateEvent_xjal ) {
      Average_Income.update();
      return;
    }
    if ( _e == _STD_Income_autoUpdateEvent_xjal ) {
      STD_Income.update();
      return;
    }
    if ( _e == _Incomeoverownership_autoUpdateEvent_xjal ) {
      Incomeoverownership.update();
      return;
    }
    if ( _e == _autoCreatedDS_xjal ) {
      _ds_OwnershipDemand.update();
      _ds_PotentialOwner.update();
      _ds_NormalRent.update();
      _ds_RentalDemand.update();
      _ds_OwnershipCost.update();
      _ds_C32.update();
      _ds_C12.update();
      _ds_C22.update();
      _ds_RentImpact.update();
      _ds_NormalPrice.update();
      _ds_AvgLife.update();
      _ds_SalesSupply.update();
      _ds_RentalSupply.update();
      _ds_DispIncome.update();
      _ds_Householdsize.update();
      _ds_C00.update();
      _ds_Coef.update();
      _ds_InitialOwnershipCost.update();
      _ds_SupplyCoef.update();
      _ds_AverageOwnershiptime.update();
      _ds_Vout1.update();
      _ds_Vout2.update();
      _ds_AverageRentalStay.update();
      _ds_OwningRatio.update();
      _ds_C000.update();
      _ds_OW.update();
      _ds_SW.update();
      _ds_Population.update();
      _ds_OCgrowth.update();
      _ds_STD.update();
      _ds_IncomeTrend.update();
      _ds_Productivity.update();
      _ds_GDP_Differene.update();
      _ds_CL.update();
      _ds_Supply_Function.update();
      _ds_Total_Occ.update();
      _ds_Demolish.update();
      _ds_OC_Real_Out.update();
      _ds_homelesness_ratio.update();
      _ds_CC.update();
      _ds_PUncertainty.update();
      _ds_OCgrowth1.update();
      _ds_c.update();
      _ds_d.update();
      _ds_cd.update();
      _ds_ConstructionStartRate.update();
      _ds_ConsCompleRate.update();
      _ds_Demolition.update();
      _ds_SalesPriceChange.update();
      _ds_RentPriceChange.update();
      _ds_Demolition1.update();
      _ds_Rate1.update();
      _ds_Rate2.update();
      _ds_OctoDi1.update();
      _ds_RetoDi2.update();
      _ds_Discharge_effect.update();
      _ds_Out.update();
      _ds_Vacant.update();
      _ds_UnderConstruction.update();
      _ds_Occupied.update();
      _ds_SalesPrice.update();
      _ds_RentPrice.update();
      _ds_Rented.update();
      return;
    }
    super.executeActionOf( _e );
  }

	

  /** Internal constant, shouldn't be accessed by user */
  @AnyLogicInternalCodegenAPI
  protected static final int _STATECHART_COUNT_xjal = 0;


  // Functions

  void writeOutput(  ) { 

exceloutputFile.writeDataSet(this.RealConstructionStartRateABS, "DirectModelOutptut",2,1);
exceloutputFile.writeDataSet(this.SimulatedConstructionStartRate, "DirectModelOutptut",2,3);

exceloutputFile.writeDataSet(this.SupplySalesdata, "DirectModelOutptut",2,5);
exceloutputFile.writeDataSet(this.OwnershipDemanddata, "DirectModelOutptut",2,7);
exceloutputFile.writeDataSet(this.SupplyRentdata, "DirectModelOutptut",2,9);
exceloutputFile.writeDataSet(this.RentalDemanddata, "DirectModelOutptut",2,11);
exceloutputFile.writeDataSet(this.Simlationpop, "DirectModelOutptut",2,13);
exceloutputFile.writeDataSet(this.SimulatedRented, "DirectModelOutptut",2,15);
exceloutputFile.writeDataSet(this.RealRented, "DirectModelOutptut",2,17);
exceloutputFile.writeDataSet(this.SimulatedOccupied, "DirectModelOutptut",2,19);
exceloutputFile.writeDataSet(this.RealOccupied, "DirectModelOutptut",2,21);

exceloutputFile.writeDataSet(this.SimulatedPrice, "DirectModelOutptut",2,23);
exceloutputFile.writeDataSet(this.RealPrice, "DirectModelOutptut",2,25);
exceloutputFile.writeDataSet(this.SimulatedRent, "DirectModelOutptut",2,27);
exceloutputFile.writeDataSet(this.RealRent, "DirectModelOutptut",2,29);

exceloutputFile.writeDataSet(this.Simlationpop, "DirectModelOutptut",2,31);
exceloutputFile.writeDataSet(this.NumUnits, "DirectModelOutptut",2,33);
exceloutputFile.writeDataSet(this.Demolition_Data, "DirectModelOutptut",2,35);
exceloutputFile.writeDataSet(this.Disp_Income_Out, "DirectModelOutptut",2,37);

exceloutputFile.writeDataSet(this.OC_Out, "DirectModelOutptut",2,39);
exceloutputFile.writeDataSet(this.Homeless, "DirectModelOutptut",2,41);
exceloutputFile.writeDataSet(this.Vacant00, "DirectModelOutptut",2,43);

exceloutputFile.writeDataSet(this.Average_Income, "DirectModelOutptut",2,45);
exceloutputFile.writeDataSet(this.STD_Income, "DirectModelOutptut",2,47);
exceloutputFile.writeDataSet(this.Incomeoverownership, "DirectModelOutptut",2,49); 
  }
  // Table Functions

  @AnyLogicInternalCodegenAPI
  private final static double[] _ConstructionStartRateABS_Arguments_xjal = _ConstructionStartRateABS_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _ConstructionStartRateABS_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0, 27.0, 30.0, 33.0, 36.0, 39.0, 42.0, 45.0, 48.0, 51.0, 54.0, 57.0, 60.0, 63.0, 66.0, 69.0, 72.0, 75.0, 78.0, 81.0, 84.0, 87.0, 90.0, 93.0, 96.0, 99.0, 102.0, 105.0, 108.0, 111.0, 114.0, 117.0, 120.0, 123.0, 126.0, 129.0, 132.0, 135.0, 138.0, 141.0, 144.0, 147.0, 150.0, 153.0, 156.0, 159.0, 162.0, 165.0, 168.0, 171.0, 174.0, 177.0, 180.0, 183.0, 186.0, 189.0, 192.0, 195.0, 198.0, 201.0, 204.0, 207.0, 210.0, 213.0, 216.0, 219.0, 222.0, 225.0, 228.0, 231.0, 560.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _ConstructionStartRateABS_Values_xjal = _ConstructionStartRateABS_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _ConstructionStartRateABS_Values_xjal() {
    return new double[] { 44015.0, 46533.0, 40353.0, 42066.0, 42262.0, 41402.0, 34446.0, 39949.0, 41013.0, 37265.0, 34809.0, 37785.0, 40118.0, 40061.0, 34175.0, 36902.0, 40760.0, 41487.0, 36044.0, 39754.0, 38754.0, 32975.0, 28858.0, 31091.0, 37628.0, 43301.0, 41990.0, 46533.0, 44045.0, 40899.0, 37937.0, 38450.0, 39406.0, 37925.0, 30567.0, 36315.0, 41701.0, 43664.0, 36154.0, 41990.0, 44025.0, 47667.0, 44764.0, 46815.0, 56893.0, 53462.0, 51214.0, 55619.0, 58958.0, 58431.0, 57855.0, 55349.0, 59669.0, 58856.0, 48981.0, 52844.0, 58478.0, 55269.0, 56622.0, 56746.0, 54304.0, 50344.0, 46546.0, 44052.0, 42883.0, 42445.0, 41987.0, 42462.0, 44708.0, 48880.0, 53319.0, 55774.0, 55477.0, 53577.0, 50448.0, 47307.0, 44468.0, 41828.0, 41828.0,  };
  }

  /**
   * ConstructionStartRateABS Table Function
   */
  public static final TableFunction ConstructionStartRateABS = new TableFunction( _ConstructionStartRateABS_Arguments_xjal, _ConstructionStartRateABS_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double ConstructionStartRateABS( double x ) { return ConstructionStartRateABS.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _PriceABS_Arguments_xjal = _PriceABS_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PriceABS_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 6.0, 9.0, 12.0, 15.0, 18.0, 21.0, 24.0, 27.0, 30.0, 33.0, 36.0, 39.0, 42.0, 45.0, 48.0, 51.0, 54.0, 57.0, 60.0, 63.0, 66.0, 69.0, 72.0, 75.0, 78.0, 81.0, 84.0, 87.0, 90.0, 93.0, 96.0, 99.0, 102.0, 105.0, 108.0, 111.0, 114.0, 117.0, 120.0, 123.0, 126.0, 129.0, 132.0, 135.0, 138.0, 141.0, 144.0, 147.0, 150.0, 153.0, 156.0, 159.0, 162.0, 165.0, 168.0, 171.0, 195.0, 198.0, 201.0, 204.0, 207.0, 210.0, 213.0, 216.0, 220.0, 228.0, 560.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _PriceABS_Values_xjal = _PriceABS_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PriceABS_Values_xjal() {
    return new double[] { 332257.8397, 344777.7003, 343333.101, 339962.3693, 339962.3693, 345740.7666, 345259.2334, 347666.899, 347185.3659, 353926.8293, 357779.0941, 370780.4878, 377521.9512, 384263.4146, 387634.1463, 404969.338, 419415.331, 435305.9233, 437232.0557, 433379.7909, 423749.1289, 417970.7317, 417007.6655, 434342.8571, 452641.115, 477680.8362, 492608.3624, 502239.0244, 495979.0941, 498868.2927, 494534.4948, 491163.7631, 482496.1672, 478643.9024, 481533.101, 483459.2334, 482496.1672, 493089.8955, 496460.6272, 508980.4878, 521500.3484, 542206.2718, 549910.8014, 560504.5296, 567245.993, 578802.7875, 587951.9164, 615399.3031, 627919.1638, 628882.23, 627919.1638, 640439.0244, 650069.6864, 677035.5401, 691963.0662, 705445.993, 704001.3937, 710742.8571, 738461.8285, 750277.2178, 736772.2279, 742666.4057, 764946.3979, 806253.5033, 860272.4881, 903286.1125, 945740.5598, 1002484.0, 1002484.0,  };
  }

  /**
   * PriceABS Table Function
   */
  public static final TableFunction PriceABS = new TableFunction( _PriceABS_Arguments_xjal, _PriceABS_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double PriceABS( double x ) { return PriceABS.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _OccupiedABS_Arguments_xjal = _OccupiedABS_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OccupiedABS_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 222.0, 228.0, 560.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _OccupiedABS_Values_xjal = _OccupiedABS_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OccupiedABS_Values_xjal() {
    return new double[] { 5408.549, 5415.06, 5492.8566, 5516.7959, 5778.168, 5816.8896, 5891.0376, 6050.2275, 6137.0048, 6614.342314, 6674.1330078672, 6674.1330078672,  };
  }

  /**
   * OccupiedABS Table Function
   */
  public static final TableFunction OccupiedABS = new TableFunction( _OccupiedABS_Arguments_xjal, _OccupiedABS_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double OccupiedABS( double x ) { return OccupiedABS.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _RentedABS_Arguments_xjal = _RentedABS_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _RentedABS_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 222.0, 228.0, 560.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _RentedABS_Values_xjal = _RentedABS_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _RentedABS_Values_xjal() {
    return new double[] { 2153.9724, 2135.0808, 2258.967, 2398.9581, 2410.3695, 2615.0112, 2717.59175, 2715.8799, 2966.528, 2903.127622, 2929.37059621321, 2929.37059621321,  };
  }

  /**
   * RentedABS Table Function
   */
  public static final TableFunction RentedABS = new TableFunction( _RentedABS_Arguments_xjal, _RentedABS_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double RentedABS( double x ) { return RentedABS.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Rent_Arguments_xjal = _Rent_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Rent_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 36.0, 60.0, 84.0, 108.0, 132.0, 156.0, 180.0, 231.0, 560.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Rent_Values_xjal = _Rent_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Rent_Values_xjal() {
    return new double[] { 12792.0, 13208.0, 14248.0, 15860.0, 17420.0, 18772.0, 19500.0, 19448.0, 19604.0, 22388.0, 22388.0,  };
  }

  /**
   * Rent Table Function
   */
  public static final TableFunction Rent = new TableFunction( _Rent_Arguments_xjal, _Rent_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Rent( double x ) { return Rent.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _OC_Arguments_xjal = _OC_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OC_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 36.0, 60.0, 84.0, 108.0, 132.0, 156.0, 180.0, 231.0, 560.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _OC_Values_xjal = _OC_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OC_Values_xjal() {
    return new double[] { 0.053368191, 0.059347745, 0.059779305, 0.056816636, 0.048856898, 0.050437706, 0.042810351, 0.037515978, 0.036447975, 0.037, 0.037,  };
  }

  /**
   * OC Table Function
   */
  public static final TableFunction OC = new TableFunction( _OC_Arguments_xjal, _OC_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double OC( double x ) { return OC.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _HouseholdSizeABS_Arguments_xjal = _HouseholdSizeABS_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _HouseholdSizeABS_Arguments_xjal() {
    return new double[] { 0.0, 18.0, 42.0, 66.0, 90.0, 114.0, 138.0, 162.0, 171.0, 231.0, 232.0, 560.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _HouseholdSizeABS_Values_xjal = _HouseholdSizeABS_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _HouseholdSizeABS_Values_xjal() {
    return new double[] { 2.53452778, 2.514534077, 2.555693115, 2.570625707, 2.571027994, 2.58707109, 2.598830788, 2.595206248, 2.595206248, 2.595206248, 2.595206248, 2.595206248,  };
  }

  /**
   * HouseholdSizeABS Table Function
   */
  public static final TableFunction HouseholdSizeABS = new TableFunction( _HouseholdSizeABS_Arguments_xjal, _HouseholdSizeABS_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double HouseholdSizeABS( double x ) { return HouseholdSizeABS.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis_Arguments_xjal = _Income_Rent_Dis_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis_Arguments_xjal() {
    return new double[] { 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0, 95.0, 96.0, 97.0, 98.0, 99.0, 100.0, 101.0, 102.0, 103.0, 104.0, 105.0, 106.0, 107.0, 108.0, 109.0, 110.0, 111.0, 112.0, 113.0, 114.0, 115.0, 116.0, 117.0, 118.0, 119.0, 120.0, 121.0, 122.0, 123.0, 124.0, 125.0, 126.0, 127.0, 128.0, 129.0, 130.0, 131.0, 132.0, 133.0, 134.0, 135.0, 136.0, 137.0, 138.0, 139.0, 140.0, 141.0, 142.0, 143.0, 144.0, 145.0, 146.0, 147.0, 148.0, 149.0, 150.0, 151.0, 152.0, 153.0, 154.0, 155.0, 156.0, 157.0, 158.0, 159.0, 160.0, 161.0, 162.0, 163.0, 164.0, 165.0, 166.0, 167.0, 168.0, 169.0, 170.0, 171.0, 172.0, 173.0, 174.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis_Values_xjal = _Income_Rent_Dis_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis_Values_xjal() {
    return new double[] { 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.0044, 0.004403333, 0.004406667, 0.00441, 0.004413333, 0.004416667, 0.00442, 0.004423333, 0.004426667, 0.00443, 0.004433333, 0.004436667, 0.00444, 0.004443333, 0.004446667, 0.00445, 0.004453333, 0.004456667, 0.00446, 0.004463333, 0.004466667, 0.00447, 0.004473333, 0.004476667, 0.00448, 0.004483333, 0.004486667, 0.00449, 0.004493333, 0.004496667, 0.0045, 0.004503333, 0.004506667, 0.00451, 0.004513333, 0.004516667, 0.00452, 0.004523333, 0.004526667, 0.00453, 0.004533333, 0.004536667, 0.00454, 0.004543333, 0.004546667, 0.00455, 0.004553333, 0.004556667, 0.00456, 0.004563333, 0.004566667, 0.00457, 0.004573333, 0.004576667, 0.00458, 0.004583333, 0.004586667, 0.00459, 0.004593333, 0.004596667, 0.0046, 0.004605, 0.00461, 0.004615, 0.00462, 0.004625, 0.00463, 0.004635, 0.00464, 0.004645, 0.00465, 0.004655, 0.00466, 0.004665, 0.00467, 0.004675, 0.00468, 0.004685, 0.00469, 0.004695, 0.0047, 0.004705, 0.00471, 0.004715, 0.00472, 0.004725, 0.00473, 0.004735, 0.00474, 0.004745, 0.00475, 0.004755, 0.00476, 0.004765, 0.00477, 0.004775, 0.00478, 0.004785, 0.00479, 0.004795, 0.0048, 0.004805, 0.00481, 0.004815, 0.00482, 0.004825, 0.00483, 0.004835, 0.00484, 0.004845, 0.00485, 0.004855, 0.00486, 0.004865, 0.00487, 0.004875, 0.00488, 0.004885, 0.00489, 0.004895, 0.0049, 0.004897917, 0.004895833, 0.00489375, 0.004891667, 0.004889583, 0.0048875, 0.004885417, 0.004883333, 0.00488125, 0.004879167, 0.004877083, 0.004875, 0.004872917, 0.004870833, 0.004803593, 0.004809687, 0.004818692, 0.0048233668,  };
  }

  /**
   * Income_Rent_Dis Table Function
   */
  public static final TableFunction Income_Rent_Dis = new TableFunction( _Income_Rent_Dis_Arguments_xjal, _Income_Rent_Dis_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double Income_Rent_Dis( double x ) { return Income_Rent_Dis.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop1_Arguments_xjal = _SSP1_Pop1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop1_Values_xjal = _SSP1_Pop1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop1_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.604394069E7, 2.791982749E7, 2.972247576E7, 3.147563541E7, 3.321493385E7, 3.493072955E7, 3.659243629E7, 3.816591903E7, 3.96367918E7, 4.086564314E7, 4.182991082E7, 4.255065027E7, 4.294003806E7, 4.297780896E7, 4.269938032E7, 4.21677715E7, 4.144128082E7,  };
  }

  /**
   * SSP1_Pop1 Table Function
   */
  public static final TableFunction SSP1_Pop1 = new TableFunction( _SSP1_Pop1_Arguments_xjal, _SSP1_Pop1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP1_Pop1( double x ) { return SSP1_Pop1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme_Arguments_xjal = _OCgrowthInsuranceExtreme_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 567.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme_Values_xjal = _OCgrowthInsuranceExtreme_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme_Values_xjal() {
    return new double[] { 1.0, 1.0, 7.0,  };
  }

  /**
   * OCgrowthInsuranceExtreme Table Function
   */
  public static final TableFunction OCgrowthInsuranceExtreme = new TableFunction( _OCgrowthInsuranceExtreme_Arguments_xjal, _OCgrowthInsuranceExtreme_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double OCgrowthInsuranceExtreme( double x ) { return OCgrowthInsuranceExtreme.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis1_Arguments_xjal = _Income_Rent_Dis1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis1_Arguments_xjal() {
    return new double[] { 0.001, 0.011, 0.021, 0.031, 0.041, 0.051, 0.061, 0.071, 0.081, 0.091, 0.101, 0.111, 0.121, 0.131, 0.141, 0.151, 0.161, 0.171, 0.181, 0.191, 0.201, 0.211, 0.221, 0.231, 0.241, 0.251, 0.261, 0.271, 0.281, 0.291, 0.301, 0.311, 0.321, 0.331, 0.341, 0.351, 0.361, 0.371, 0.381, 0.391, 0.401, 0.411, 0.421, 0.431, 0.441, 0.451, 0.461, 0.471, 0.481, 0.491, 0.501, 0.511, 0.521, 0.531, 0.541, 0.551, 0.561, 0.571, 0.581, 0.591, 0.601, 0.611, 0.621, 0.631, 0.641, 0.651, 0.661, 0.671, 0.681, 0.691, 0.701, 0.711, 0.721, 0.731, 0.741, 0.751, 0.761, 0.771, 0.781, 0.791, 0.801, 0.811, 0.821, 0.831, 0.841, 0.851, 0.861, 0.871, 0.881, 0.891, 0.901, 0.911, 0.921, 0.931, 0.941, 0.951, 0.961, 0.971, 0.981, 0.991, 1.001, 1.011, 1.021, 1.031, 1.041, 1.051, 1.061, 1.071, 1.081, 1.091, 1.101, 1.111, 1.121, 1.131, 1.141, 1.151, 1.161, 1.171, 1.181, 1.191, 1.201, 1.211, 1.221, 1.231, 1.241, 1.251, 1.261, 1.271, 1.281, 1.291, 1.301, 1.311, 1.321, 1.331, 1.341, 1.351, 1.361, 1.371, 1.381, 1.391, 1.401, 1.411, 1.421, 1.431, 1.441, 1.451, 1.461, 1.471, 1.481, 1.491, 1.501, 1.511, 1.521, 1.531, 1.541, 1.551, 1.561, 1.571, 1.581, 1.591, 1.601, 1.611, 1.621, 1.631, 1.641, 1.651, 1.661, 1.671, 1.681, 1.691, 1.701, 1.711, 1.721, 1.731, 1.741, 1.751, 1.761, 1.771, 1.781, 1.791, 1.801, 1.811, 1.821, 1.831, 1.841, 1.851, 1.861, 1.871, 1.881, 1.891, 1.901, 1.911, 1.921, 1.931, 1.941, 1.951, 1.961, 1.971, 1.981, 1.991, 2.001, 2.011, 2.021, 2.031, 2.041, 2.051, 2.061, 2.071, 2.081, 2.091, 2.101, 2.111, 2.121, 2.131, 2.141, 2.151, 2.161, 2.171, 2.181, 2.191, 2.201, 2.211, 2.221, 2.231, 2.241, 2.251, 2.261, 2.271, 2.281, 2.291, 2.301, 2.311, 2.321, 2.331, 2.341, 2.351, 2.361, 2.371, 2.381, 2.391, 2.401, 2.411, 2.421, 2.431, 2.441, 2.451, 2.461, 2.471, 2.481, 2.491, 2.501, 2.511, 2.521, 2.531, 2.541, 2.551, 2.561, 2.571, 2.581, 2.591, 2.601, 2.611, 2.621, 2.631, 2.641, 2.651, 2.661, 2.671, 2.681, 2.691, 2.701, 2.711, 2.721, 2.731, 2.741, 2.751, 2.761, 2.771, 2.781, 2.791, 2.801, 2.811, 2.821, 2.831, 2.841, 2.851, 2.861, 2.871, 2.881, 2.891, 2.901, 2.911, 2.921, 2.931, 2.941, 2.951, 2.961, 2.971, 2.981, 2.991, 3.001, 3.011, 3.021, 3.031, 3.041, 3.051, 3.061, 3.071, 3.081, 3.091, 3.101, 3.111, 3.121, 3.131, 3.141, 3.151, 3.161, 3.171, 3.181, 3.191, 3.201, 3.211, 3.221, 3.231, 3.241, 3.251, 3.261, 3.271, 3.281, 3.291, 3.301, 3.311, 3.321, 3.331, 3.341, 3.351, 3.361, 3.371, 3.381, 3.391, 3.401, 3.411, 3.421, 3.431, 3.441, 3.451, 3.461, 3.471, 3.481, 3.491, 3.501, 3.511, 3.521, 3.531, 3.541, 3.551, 3.561, 3.571, 3.581, 3.591, 3.601, 3.611, 3.621, 3.631, 3.641, 3.651, 3.661, 3.671, 3.681, 3.691, 3.701, 3.711, 3.721, 3.731, 3.741, 3.751, 3.761, 3.771, 3.781, 3.791, 3.801, 3.811, 3.821, 3.831, 3.841, 3.851, 3.861, 3.871, 3.881, 3.891, 3.901, 3.911, 3.921, 3.931, 3.941, 3.951, 3.961, 3.971, 3.981, 3.991, 4.001, 4.011, 4.021, 4.031, 4.041, 4.051, 4.061, 4.071, 4.081, 4.091, 4.101, 4.111, 4.121, 4.131, 4.141, 4.151, 4.161, 4.171, 4.181, 4.191, 4.201, 4.211, 4.221, 4.231, 4.241, 4.251, 4.261, 4.271, 4.281, 4.291, 4.301, 4.311, 4.321, 4.331, 4.341, 4.351, 4.361, 4.371, 4.381, 4.391, 4.401, 4.411, 4.421, 4.431, 4.441, 4.451, 4.461, 4.471, 4.481, 4.491, 4.501, 4.511, 4.521, 4.531, 4.541, 4.551, 4.561, 4.571, 4.581, 4.591, 4.601, 4.611, 4.621, 4.631, 4.641, 4.651, 4.661, 4.671, 4.681, 4.691, 4.701, 4.711, 4.721, 4.731, 4.741, 4.751, 4.761, 4.771, 4.781, 4.791, 4.801, 4.811, 4.821, 4.831, 4.841, 4.851, 4.861, 4.871, 4.881, 4.891, 4.901, 4.911, 4.921, 4.931, 4.941, 4.951, 4.961, 4.971, 4.981, 4.991, 5.001, 5.011, 5.021, 5.031, 5.041, 5.051, 5.061, 5.071, 5.081, 5.091, 5.101, 5.111, 5.121, 5.131, 5.141, 5.151, 5.161, 5.171, 5.181, 5.191, 5.201, 5.211, 5.221, 5.231, 5.241, 5.251, 5.261, 5.271, 5.281, 5.291, 5.301, 5.311, 5.321, 5.331, 5.341, 5.351, 5.361, 5.371, 5.381, 5.391, 5.401, 5.411, 5.421, 5.431, 5.441, 5.451, 5.461, 5.471, 5.481, 5.491, 5.501, 5.511, 5.521, 5.531, 5.541, 5.551, 5.561, 5.571, 5.581, 5.591, 5.601, 5.611, 5.621, 5.631, 5.641, 5.651, 5.661, 5.671, 5.681, 5.691, 5.701, 5.711, 5.721, 5.731, 5.741, 5.751, 5.761, 5.771, 5.781, 5.791, 5.801, 5.811, 5.821, 5.831, 5.841, 5.851, 5.861, 5.871, 5.881, 5.891, 5.901, 5.911, 5.921, 5.931, 5.941, 5.951, 5.961, 5.971, 5.981, 5.991, 6.001, 6.011, 6.021, 6.031, 6.041, 6.051, 6.061, 6.071, 6.081, 6.091, 6.101, 6.111, 6.121, 6.131, 6.141, 6.151, 6.161, 6.171, 6.181, 6.191, 6.201, 6.211, 6.221, 6.231, 6.241, 6.251, 6.261, 6.271, 6.281, 6.291, 6.301, 6.311, 6.321, 6.331, 6.341, 6.351, 6.361, 6.371, 6.381, 6.391, 6.401, 6.411, 6.421, 6.431, 6.441, 6.451, 6.461, 6.471, 6.481, 6.491, 6.501, 6.511, 6.521, 6.531, 6.541, 6.551, 6.561, 6.571, 6.581, 6.591, 6.601, 6.611, 6.621, 6.631, 6.641, 6.651, 6.661, 6.671, 6.681, 6.691, 6.701, 6.711, 6.721, 6.731, 6.741, 6.751, 6.761, 6.771, 6.781, 6.791, 6.801, 6.811, 6.821, 6.831, 6.841, 6.851, 6.861, 6.871, 6.881, 6.891, 6.901, 6.911, 6.921, 6.931, 6.941, 6.951, 6.961, 6.971, 6.981, 6.991, 7.001, 7.011, 7.021, 7.031, 7.041, 7.051, 7.061, 7.071, 7.081, 7.091, 7.101, 7.111, 7.121, 7.131, 7.141, 7.151, 7.161, 7.171, 7.181, 7.191, 7.201, 7.211, 7.221, 7.231, 7.241, 7.251, 7.261, 7.271, 7.281, 7.291, 7.301, 7.311, 7.321, 7.331, 7.341, 7.351, 7.361, 7.371, 7.381, 7.391, 7.401, 7.411, 7.421, 7.431, 7.441, 7.451, 7.461, 7.471, 7.481, 7.491, 7.501, 7.511, 7.521, 7.531, 7.541, 7.551, 7.561, 7.571, 7.581, 7.591, 7.601, 7.611, 7.621, 7.631, 7.641, 7.651, 7.661, 7.671, 7.681, 7.691, 7.701, 7.711, 7.721, 7.731, 7.741, 7.751, 7.761, 7.771, 7.781, 7.791, 7.801, 7.811, 7.821, 7.831, 7.841, 7.851, 7.861, 7.871, 7.881, 7.891, 7.901, 7.911, 7.921, 7.931, 7.941, 7.951, 7.961, 7.971, 7.981, 7.991, 8.001, 8.011, 8.021, 8.031, 8.041, 8.051, 8.061, 8.071, 8.081, 8.091, 8.101, 8.111, 8.121, 8.131, 8.141, 8.151, 8.161, 8.171, 8.181, 8.191, 8.201, 8.211, 8.221, 8.231, 8.241, 8.251, 8.261, 8.271, 8.281, 8.291, 8.301, 8.311, 8.321, 8.331, 8.341, 8.351, 8.361, 8.371, 8.381, 8.391, 8.401, 8.411, 8.421, 8.431, 8.441, 8.451, 8.461, 8.471, 8.481, 8.491, 8.501, 8.511, 8.521, 8.531, 8.541, 8.551, 8.561, 8.571, 8.581, 8.591, 8.601, 8.611, 8.621, 8.631, 8.641, 8.651, 8.661, 8.671, 8.681, 8.691, 8.701, 8.711, 8.721, 8.731, 8.741, 8.751, 8.761, 8.771, 8.781, 8.791, 8.801, 8.811, 8.821, 8.831, 8.841, 8.851, 8.861, 8.871, 8.881, 8.891, 8.901, 8.911, 8.921, 8.931, 8.941, 8.951, 8.961, 8.971, 8.981, 8.991, 9.001, 9.011, 9.021, 9.031, 9.041, 9.051, 9.061, 9.071, 9.081, 9.091, 9.101, 9.111, 9.121, 9.131, 9.141, 9.151, 9.161, 9.171, 9.181, 9.191, 9.201, 9.211, 9.221, 9.231, 9.241, 9.251, 9.261, 9.271, 9.281, 9.291, 9.301, 9.311, 9.321, 9.331, 9.341, 9.351, 9.361, 9.371, 9.381, 9.391, 9.401, 9.411, 9.421, 9.431, 9.441, 9.451, 9.461, 9.471, 9.481, 9.491, 9.501, 9.511, 9.521, 9.531, 9.541, 9.551, 9.561, 9.571, 9.581, 9.591, 9.601, 9.611, 9.621, 9.631, 9.641, 9.651, 9.661, 9.671, 9.681, 9.691, 9.701, 9.711, 9.721, 9.731, 9.741, 9.751, 9.761, 9.771, 9.781, 9.791, 9.801, 9.811, 9.821, 9.831, 9.841, 9.851, 9.861, 9.871, 9.881, 9.891, 9.901, 9.911, 9.921, 9.931, 9.941, 9.951, 9.961, 9.971, 9.981, 9.991, 10.001,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis1_Values_xjal = _Income_Rent_Dis1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Income_Rent_Dis1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.999231635, 0.997127897, 0.994362275, 0.990881089, 0.986649063, 0.981648029, 0.975875011, 0.969340041, 0.962063921, 0.954076088, 0.945412656, 0.936114679, 0.926226645, 0.915795197, 0.904868069, 0.893493213, 0.8817181, 0.86958916, 0.857151366, 0.844447905, 0.831519955, 0.81840653, 0.805144381, 0.791767957, 0.778309395, 0.764798547, 0.751263028, 0.737728284, 0.724217676, 0.710752562, 0.697352402, 0.684034853, 0.670815875, 0.657709829, 0.644729578, 0.631886589, 0.619191025, 0.606651839, 0.59427686, 0.582072879, 0.570045726, 0.558200349, 0.546540884, 0.535070717, 0.523792553, 0.512708473, 0.501819985, 0.491128079, 0.480633274, 0.47033566, 0.460234938, 0.450330463, 0.440621274, 0.431106129, 0.421783532, 0.412651765, 0.403708909, 0.39495287, 0.386381398, 0.37799211, 0.369782505, 0.361749982, 0.353891855, 0.346205367, 0.338687699, 0.331335988, 0.324147334, 0.317118806, 0.310247457, 0.303530329, 0.296964457, 0.290546882, 0.284274649, 0.278144819, 0.27215447, 0.266300699, 0.260580633, 0.254991423, 0.249530255, 0.244194346, 0.238980951, 0.233887363, 0.228910913, 0.224048973, 0.219298961, 0.214658332, 0.21012459, 0.20569528, 0.201367994, 0.197140369, 0.193010085, 0.188974872, 0.185032502, 0.181180792, 0.177417606, 0.173740853, 0.170148486, 0.166638501, 0.163208939, 0.159857884, 0.156583463, 0.153383844, 0.150257239, 0.147201898, 0.144216114, 0.141298216, 0.138446577, 0.135659604, 0.132935743, 0.130273478, 0.127671328, 0.125127847, 0.122641626, 0.120211288, 0.117835489, 0.11551292, 0.113242302, 0.111022389, 0.108851962, 0.106729836, 0.104654854, 0.102625885, 0.10064183, 0.098701615, 0.096804192, 0.09494854, 0.093133663, 0.09135859, 0.089622375, 0.087924093, 0.086262845, 0.084637752, 0.083047959, 0.081492631, 0.079970954, 0.078482134, 0.077025398, 0.07559999, 0.074205176, 0.072840238, 0.071504477, 0.07019721, 0.068917772, 0.067665515, 0.066439806, 0.065240029, 0.064065583, 0.06291588, 0.061790349, 0.060688432, 0.059609586, 0.058553279, 0.057518994, 0.056506227, 0.055514486, 0.05454329, 0.053592171, 0.052660672, 0.051748348, 0.050854764, 0.049979496, 0.049122131, 0.048282265, 0.047459504, 0.046653464, 0.04586377, 0.045090057, 0.044331967, 0.043589153, 0.042861275, 0.042148002, 0.041449008, 0.04076398, 0.040092609, 0.039434593, 0.038789639, 0.038157461, 0.037537778, 0.036930319, 0.036334815, 0.035751007, 0.035178641, 0.034617469, 0.034067248, 0.033527742, 0.03299872, 0.032479956, 0.031971231, 0.031472328, 0.030983039, 0.030503158, 0.030032484, 0.029570823, 0.029117982, 0.028673775, 0.02823802, 0.027810538, 0.027391156, 0.026979703, 0.026576013, 0.026179924, 0.025791277, 0.025409917, 0.025035692, 0.024668456, 0.024308062, 0.023954369, 0.02360724, 0.023266539, 0.022932135, 0.022603897, 0.0222817, 0.021965421, 0.021654939, 0.021350136, 0.021050897, 0.020757109, 0.020468662, 0.020185448, 0.019907363, 0.019634302, 0.019366165, 0.019102854, 0.018844271, 0.018590324, 0.018340919, 0.018095967, 0.017855379, 0.017619069, 0.017386953, 0.017158947, 0.016934971, 0.016714947, 0.016498796, 0.016286442, 0.016077813, 0.015872835, 0.015671437, 0.01547355, 0.015279106, 0.015088039, 0.014900283, 0.014715774, 0.014534451, 0.014356252, 0.014181117, 0.014008988, 0.013839808, 0.01367352, 0.01351007, 0.013349404, 0.013191469, 0.013036214, 0.012883587, 0.012733541, 0.012586026, 0.012440994, 0.012298401, 0.012158199, 0.012020344, 0.011884793, 0.011751503, 0.011620433, 0.01149154, 0.011364785, 0.011240129, 0.011117533, 0.010996959, 0.01087837, 0.010761729, 0.010647003, 0.010534154, 0.01042315, 0.010313956, 0.010206541, 0.010100871, 0.009996916, 0.009894644, 0.009794026, 0.009695031, 0.00959763, 0.009501795, 0.009407498, 0.009314712, 0.00922341, 0.009133565, 0.009045151, 0.008958144, 0.008872518, 0.008788249, 0.008705313, 0.008623688, 0.008543348, 0.008464274, 0.008386441, 0.008309829, 0.008234416, 0.008160181, 0.008087105, 0.008015167, 0.007944346, 0.007874625, 0.007805984, 0.007738405, 0.007671868, 0.007606357, 0.007541854, 0.007478342, 0.007415803, 0.007354222, 0.007293581, 0.007233866, 0.00717506, 0.007117148, 0.007060114, 0.007003945, 0.006948625, 0.006894141, 0.006840478, 0.006787623, 0.006735561, 0.006684281, 0.006633768, 0.006584011, 0.006534996, 0.006486711, 0.006439145, 0.006392285, 0.00634612, 0.006300638, 0.006255828, 0.006211679, 0.00616818, 0.006125321, 0.006083092, 0.006041481, 0.006000479, 0.005960076, 0.005920263, 0.005881029, 0.005842366, 0.005804264, 0.005766714, 0.005729707, 0.005693235, 0.005657289, 0.005621861, 0.005586942, 0.005552524, 0.0055186, 0.005485161, 0.005452199, 0.005419708, 0.00538768, 0.005356107, 0.005324982, 0.005294298, 0.005264049, 0.005234227, 0.005204826, 0.005175839, 0.00514726, 0.005119082, 0.005091299, 0.005063905, 0.005036894, 0.00501026, 0.004983998, 0.0049581, 0.004932563, 0.00490738, 0.004882545, 0.004858054, 0.004833901, 0.004810082, 0.00478659, 0.004763421, 0.00474057, 0.004718032, 0.004695803, 0.004673877, 0.004652251, 0.004630919, 0.004609878, 0.004589122, 0.004568648, 0.004548451, 0.004528527, 0.004508872, 0.004489483, 0.004470354, 0.004451482, 0.004432864, 0.004414495, 0.004396373, 0.004378492, 0.00436085, 0.004343443, 0.004326268, 0.004309321, 0.004292599, 0.004276099, 0.004259817, 0.00424375, 0.004227894, 0.004212248, 0.004196808, 0.00418157, 0.004166533, 0.004151692, 0.004137045, 0.00412259, 0.004108323, 0.004094243, 0.004080345, 0.004066628, 0.004053088, 0.004039725, 0.004026533, 0.004013513, 0.00400066, 0.003987973, 0.003975449, 0.003963086, 0.003950881, 0.003938833, 0.003926939, 0.003915197, 0.003903604, 0.003892159, 0.00388086, 0.003869705, 0.003858691, 0.003847816, 0.003837079, 0.003826478, 0.00381601, 0.003805675, 0.003795469, 0.003785392, 0.003775441, 0.003765615, 0.003755912, 0.00374633, 0.003736867, 0.003727523, 0.003718295, 0.003709182, 0.003700182, 0.003691293, 0.003682515, 0.003673845, 0.003665282, 0.003656825, 0.003648472, 0.003640221, 0.003632072, 0.003624023, 0.003616073, 0.00360822, 0.003600463, 0.003592801, 0.003585232, 0.003577755, 0.003570369, 0.003563073, 0.003555865, 0.003548744, 0.00354171, 0.003534761, 0.003527895, 0.003521112, 0.003514411, 0.00350779, 0.003501249, 0.003494786, 0.003488401, 0.003482092, 0.003475858, 0.003469699, 0.003463613, 0.003457599, 0.003451657, 0.003445785, 0.003439983, 0.00343425, 0.003428584, 0.003422986, 0.003417453, 0.003411985, 0.003406582, 0.003401242, 0.003395965, 0.00339075, 0.003385596, 0.003380502, 0.003375468, 0.003370492, 0.003365574, 0.003360713, 0.003355909, 0.003351161, 0.003346468, 0.003341829, 0.003337243, 0.003332711, 0.003328231, 0.003323802, 0.003319425, 0.003315098, 0.00331082, 0.003306591, 0.003302411, 0.003298279, 0.003294194, 0.003290155, 0.003286163, 0.003282216, 0.003278314, 0.003274456, 0.003270642, 0.003266871, 0.003263143, 0.003259457, 0.003255812, 0.003252209, 0.003248646, 0.003245124, 0.00324164, 0.003238196, 0.003234791, 0.003231424, 0.003228094, 0.003224801, 0.003221546, 0.003218326, 0.003215143, 0.003211994, 0.003208881, 0.003205802, 0.003202758, 0.003199747, 0.003196769, 0.003193824, 0.003190912, 0.003188032, 0.003185183, 0.003182366, 0.00317958, 0.003176824, 0.003174099, 0.003171403, 0.003168737, 0.003166099, 0.003163491, 0.003160911, 0.003158359, 0.003155835, 0.003153338, 0.003150868, 0.003148425, 0.003146009, 0.003143618, 0.003141254, 0.003138915, 0.003136601, 0.003134311, 0.003132047, 0.003129807, 0.003127591, 0.003125398, 0.003123229, 0.003121084, 0.003118961, 0.00311686, 0.003114783, 0.003112727, 0.003110693, 0.003108681, 0.00310669, 0.00310472, 0.003102771, 0.003100842, 0.003098934, 0.003097046, 0.003095178, 0.00309333, 0.003091501, 0.003089691, 0.0030879, 0.003086128, 0.003084375, 0.003082639, 0.003080922, 0.003079223, 0.003077542, 0.003075878, 0.003074231, 0.003072602, 0.003070989, 0.003069394, 0.003067814, 0.003066251, 0.003064704, 0.003063174, 0.003061658, 0.003060159, 0.003058675, 0.003057206, 0.003055752, 0.003054314, 0.00305289, 0.00305148, 0.003050085, 0.003048704, 0.003047338, 0.003045985, 0.003044646, 0.00304332, 0.003042009, 0.00304071, 0.003039425, 0.003038152, 0.003036893, 0.003035646, 0.003034412, 0.00303319, 0.00303198, 0.003030783, 0.003029598, 0.003028425, 0.003027263, 0.003026113, 0.003024975, 0.003023848, 0.003022732, 0.003021628, 0.003020534, 0.003019452, 0.00301838, 0.003017318, 0.003016268, 0.003015228, 0.003014198, 0.003013178, 0.003012168, 0.003011169, 0.003010179, 0.003009199, 0.003008229, 0.003007268, 0.003006317, 0.003005375, 0.003004442, 0.003003518, 0.003002604, 0.003001698, 0.003000801, 0.002999913, 0.002999034, 0.002998163, 0.002997301, 0.002996447, 0.002995602, 0.002994764, 0.002993935, 0.002993114, 0.002992301, 0.002991496, 0.002990698, 0.002989908, 0.002989126, 0.002988351, 0.002987584, 0.002986824, 0.002986071, 0.002985326, 0.002984588, 0.002983857, 0.002983133, 0.002982415, 0.002981705, 0.002981001, 0.002980305, 0.002979614, 0.002978931, 0.002978254, 0.002977583, 0.002976918, 0.00297626, 0.002975609, 0.002974963, 0.002974323, 0.00297369, 0.002973062, 0.002972441, 0.002971825, 0.002971215, 0.002970611, 0.002970012, 0.002969419, 0.002968832, 0.00296825, 0.002967673, 0.002967102, 0.002966537, 0.002965976, 0.002965421, 0.002964871, 0.002964326, 0.002963786, 0.002963251, 0.002962721, 0.002962196, 0.002961676, 0.002961161, 0.00296065, 0.002960145, 0.002959643, 0.002959147, 0.002958655, 0.002958168, 0.002957685, 0.002957206, 0.002956732, 0.002956262, 0.002955797, 0.002955335, 0.002954878, 0.002954426, 0.002953977, 0.002953532, 0.002953092, 0.002952655, 0.002952223, 0.002951794, 0.002951369, 0.002950948, 0.002950531, 0.002950118, 0.002949708, 0.002949303, 0.0029489, 0.002948502, 0.002948107, 0.002947715, 0.002947327, 0.002946943, 0.002946562, 0.002946184, 0.00294581, 0.00294544, 0.002945072, 0.002944708, 0.002944347, 0.002943989, 0.002943635, 0.002943283, 0.002942935, 0.00294259, 0.002942248, 0.002941909, 0.002941573, 0.00294124, 0.002940909, 0.002940582, 0.002940258, 0.002939936, 0.002939618, 0.002939302, 0.002938989, 0.002938679, 0.002938371, 0.002938066, 0.002937764, 0.002937465, 0.002937168, 0.002936874, 0.002936582, 0.002936293, 0.002936006, 0.002935722, 0.00293544, 0.002935161, 0.002934884, 0.00293461, 0.002934338, 0.002934068, 0.002933801, 0.002933536, 0.002933273, 0.002933013, 0.002932755, 0.002932499, 0.002932245, 0.002931994, 0.002931744, 0.002931497, 0.002931252, 0.002931009, 0.002930768, 0.002930529, 0.002930293, 0.002930058, 0.002929825, 0.002929595, 0.002929366, 0.002929139, 0.002928914, 0.002928691, 0.00292847, 0.002928251, 0.002928033, 0.002927818, 0.002927604, 0.002927392, 0.002927182, 0.002926974, 0.002926768, 0.002926563, 0.00292636, 0.002926159, 0.002925959, 0.002925761, 0.002925565, 0.00292537, 0.002925177, 0.002924986, 0.002924796, 0.002924608, 0.002924421, 0.002924236, 0.002924053, 0.002923871, 0.00292369, 0.002923511, 0.002923334, 0.002923158, 0.002922984, 0.00292281, 0.002922639, 0.002922469, 0.0029223, 0.002922133, 0.002921967, 0.002921802, 0.002921639, 0.002921477, 0.002921316, 0.002921157, 0.002920999, 0.002920842, 0.002920687, 0.002920533, 0.00292038, 0.002920229, 0.002920078, 0.002919929, 0.002919782, 0.002919635, 0.002919489, 0.002919345, 0.002919202, 0.00291906, 0.00291892, 0.00291878, 0.002918641, 0.002918504, 0.002918368, 0.002918233, 0.002918099, 0.002917966, 0.002917834, 0.002917703, 0.002917573, 0.002917445, 0.002917317, 0.002917191, 0.002917065, 0.00291694, 0.002916817, 0.002916694, 0.002916573, 0.002916452, 0.002916332, 0.002916214, 0.002916096, 0.002915979, 0.002915863, 0.002915748, 0.002915634, 0.002915521, 0.002915409, 0.002915298, 0.002915187, 0.002915078, 0.002914969, 0.002914861, 0.002914754, 0.002914648, 0.002914543, 0.002914438, 0.002914335, 0.002914232, 0.00291413, 0.002914029, 0.002913928, 0.002913829, 0.00291373, 0.002913632, 0.002913535, 0.002913438, 0.002913343, 0.002913248, 0.002913153, 0.00291306, 0.002912967, 0.002912875, 0.002912784, 0.002912693, 0.002912603, 0.002912514, 0.002912426, 0.002912338, 0.002912251, 0.002912164, 0.002912079, 0.002911993, 0.002911909, 0.002911825, 0.002911742, 0.00291166, 0.002911578, 0.002911497, 0.002911416, 0.002911336, 0.002911257, 0.002911178, 0.0029111, 0.002911022, 0.002910945, 0.002910869, 0.002910793, 0.002910718, 0.002910643, 0.002910569, 0.002910496, 0.002910423, 0.002910351, 0.002910279, 0.002910208, 0.002910137, 0.002910067, 0.002909997, 0.002909928, 0.002909859, 0.002909791, 0.002909724, 0.002909657, 0.00290959, 0.002909524, 0.002909459, 0.002909394, 0.002909329, 0.002909265, 0.002909202, 0.002909139, 0.002909076, 0.002909014, 0.002908952, 0.002908891, 0.00290883, 0.00290877, 0.00290871, 0.002908651, 0.002908592, 0.002908534, 0.002908476, 0.002908418, 0.002908361, 0.002908304, 0.002908248, 0.002908192, 0.002908136, 0.002908081, 0.002908027, 0.002907972, 0.002907918, 0.002907865, 0.002907812, 0.002907759, 0.002907707,  };
  }

  /**
   * Income_Rent_Dis1 Table Function
   */
  public static final TableFunction Income_Rent_Dis1 = new TableFunction( _Income_Rent_Dis1_Arguments_xjal, _Income_Rent_Dis1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Income_Rent_Dis1( double x ) { return Income_Rent_Dis1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_GINI_Arguments_xjal = _SSP1_GINI_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_GINI_Arguments_xjal() {
    return new double[] { 0.0, 173.0, 185.0, 197.0, 209.0, 221.0, 233.0, 245.0, 257.0, 269.0, 281.0, 293.0, 305.0, 317.0, 329.0, 341.0, 353.0, 365.0, 377.0, 389.0, 401.0, 413.0, 425.0, 437.0, 449.0, 461.0, 473.0, 485.0, 497.0, 509.0, 521.0, 533.0, 545.0, 557.0, 569.0, 581.0, 593.0, 605.0, 617.0, 629.0, 641.0, 653.0, 665.0, 677.0, 689.0, 701.0, 713.0, 725.0, 737.0, 749.0, 761.0, 773.0, 785.0, 797.0, 809.0, 821.0, 833.0, 845.0, 857.0, 869.0, 881.0, 893.0, 905.0, 917.0, 929.0, 941.0, 953.0, 965.0, 977.0, 989.0, 1001.0, 1013.0, 1025.0, 1037.0, 1049.0, 1061.0, 1073.0, 1085.0, 1097.0, 1109.0, 1121.0, 1133.0, 1145.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_GINI_Values_xjal = _SSP1_GINI_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_GINI_Values_xjal() {
    return new double[] { 34.94, 34.74041291, 34.75833599, 34.77237952, 34.7837089, 34.79708106, 34.80780355, 34.81581006, 34.82107351, 34.82361226, 34.82453384, 34.8225676, 34.81772903, 34.8359293, 34.8559831, 34.87340579, 34.88874316, 34.9000694, 34.90748055, 34.91094027, 34.90683745, 34.87587492, 34.84196325, 34.80531425, 34.76613575, 34.72626996, 34.68379776, 34.63876509, 34.59123235, 34.5293402, 34.46633697, 34.40083357, 34.33285752, 34.26280941, 34.22274062, 34.18987324, 34.15579358, 34.12052821, 34.08408938, 34.04683403, 34.02093289, 34.00106598, 33.96911476, 33.93194404, 33.8939487, 33.85603317, 33.81343545, 33.76482367, 33.71523946, 33.66820776, 33.62154402, 33.57401122, 33.52562084, 33.47639612, 33.42647749, 33.37656144, 33.325815, 33.27425428, 33.22189227, 33.16947303, 33.11800375, 33.06575447, 33.01273907, 32.95896328, 32.90555033, 32.85324847, 32.80022405, 32.74646728, 32.69199765, 32.6392478, 32.59270387, 32.55568395, 32.51820994, 32.48028851, 32.44313531, 32.40710111, 32.37065534, 32.33381728, 32.29657481, 32.26012737, 32.22460643, 32.18871704, 32.15245843, 32.11583826,  };
  }

  /**
   * SSP1_GINI Table Function
   */
  public static final TableFunction SSP1_GINI = new TableFunction( _SSP1_GINI_Arguments_xjal, _SSP1_GINI_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP1_GINI( double x ) { return SSP1_GINI.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income1_Arguments_xjal = _SSP1_Income1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income1_Values_xjal = _SSP1_Income1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income1_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 55.19417771, 56.38820699, 57.42938618, 58.31721601, 59.06198197, 59.69558658, 60.24375618, 60.74570403, 61.22671081, 61.7134595, 62.19336263, 62.65610028, 63.11791438, 63.58772308, 64.0551752, 64.52076688, 64.9960976,  };
  }

  /**
   * SSP1_Income1 Table Function
   */
  public static final TableFunction SSP1_Income1 = new TableFunction( _SSP1_Income1_Arguments_xjal, _SSP1_Income1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP1_Income1( double x ) { return SSP1_Income1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income2_Arguments_xjal = _SSP1_Income2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income2_Values_xjal = _SSP1_Income2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Income2_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 54.90801386, 55.70113195, 56.49533474, 57.31015689, 58.08906607, 58.82813584, 59.46592335, 60.05617273, 60.67313416, 61.3247439, 61.98568458, 62.61678364, 63.24821641, 63.87914133, 64.52291626, 65.18565947, 65.85828994,  };
  }

  /**
   * SSP1_Income2 Table Function
   */
  public static final TableFunction SSP1_Income2 = new TableFunction( _SSP1_Income2_Arguments_xjal, _SSP1_Income2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP1_Income2( double x ) { return SSP1_Income2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income1_Arguments_xjal = _SSP3_Income1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income1_Values_xjal = _SSP3_Income1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income1_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 54.21043669, 54.31798101, 54.46209716, 54.6813149, 54.97388636, 55.31495605, 55.6767363, 56.05185511, 56.43719432, 56.83728344, 57.24602757, 57.65233442, 58.05240465, 58.44388904, 58.83227863, 59.22288057, 59.62616416,  };
  }

  /**
   * SSP3_Income1 Table Function
   */
  public static final TableFunction SSP3_Income1 = new TableFunction( _SSP3_Income1_Arguments_xjal, _SSP3_Income1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP3_Income1( double x ) { return SSP3_Income1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income2_Arguments_xjal = _SSP3_Income2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income2_Values_xjal = _SSP3_Income2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Income2_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 54.88976491, 55.58342131, 56.1112039, 56.5245682, 56.86784872, 57.17185261, 57.39324194, 57.58986725, 57.84950454, 58.16142205, 58.48495496, 58.78139085, 59.08050594, 59.3850874, 59.72572305, 60.11412583, 60.53205499,  };
  }

  /**
   * SSP3_Income2 Table Function
   */
  public static final TableFunction SSP3_Income2 = new TableFunction( _SSP3_Income2_Arguments_xjal, _SSP3_Income2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP3_Income2( double x ) { return SSP3_Income2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income1_Arguments_xjal = _SSP2_Income1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income1_Values_xjal = _SSP2_Income1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income1_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 55.21131058, 56.38864528, 57.38081077, 58.20665581, 58.88826264, 59.46016817, 59.94728024, 60.38756178, 60.80606394, 61.22505878, 61.63154983, 62.01993002, 62.39189797, 62.75406463, 63.11148727, 63.47158863, 63.83605646,  };
  }

  /**
   * SSP2_Income1 Table Function
   */
  public static final TableFunction SSP2_Income1 = new TableFunction( _SSP2_Income1_Arguments_xjal, _SSP2_Income1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP2_Income1( double x ) { return SSP2_Income1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income2_Arguments_xjal = _SSP2_Income2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income2_Values_xjal = _SSP2_Income2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Income2_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 54.89057845, 55.58422161, 56.1650089, 56.68950635, 57.20414344, 57.72197305, 58.18610919, 58.63886018, 59.14783365, 59.71048394, 60.29825467, 60.87561342, 61.4526516, 62.02446354, 62.61331954, 63.23754435, 63.89174094,  };
  }

  /**
   * SSP2_Income2 Table Function
   */
  public static final TableFunction SSP2_Income2 = new TableFunction( _SSP2_Income2_Arguments_xjal, _SSP2_Income2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP2_Income2( double x ) { return SSP2_Income2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_GINI_Arguments_xjal = _SSP2_GINI_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_GINI_Arguments_xjal() {
    return new double[] { 0.0, 173.0, 185.0, 197.0, 209.0, 221.0, 233.0, 245.0, 257.0, 269.0, 281.0, 293.0, 305.0, 317.0, 329.0, 341.0, 353.0, 365.0, 377.0, 389.0, 401.0, 413.0, 425.0, 437.0, 449.0, 461.0, 473.0, 485.0, 497.0, 509.0, 521.0, 533.0, 545.0, 557.0, 569.0, 581.0, 593.0, 605.0, 617.0, 629.0, 641.0, 653.0, 665.0, 677.0, 689.0, 701.0, 713.0, 725.0, 737.0, 749.0, 761.0, 773.0, 785.0, 797.0, 809.0, 821.0, 833.0, 845.0, 857.0, 869.0, 881.0, 893.0, 905.0, 917.0, 929.0, 941.0, 953.0, 965.0, 977.0, 989.0, 1001.0, 1013.0, 1025.0, 1037.0, 1049.0, 1061.0, 1073.0, 1085.0, 1097.0, 1109.0, 1121.0, 1133.0, 1145.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_GINI_Values_xjal = _SSP2_GINI_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_GINI_Values_xjal() {
    return new double[] { 34.94, 34.87031822, 34.90269532, 34.93233728, 34.96025228, 34.9909731, 35.01991338, 35.04705116, 35.0723547, 35.09888065, 35.16087673, 35.22090614, 35.27899903, 35.33516673, 35.38937055, 35.44230962, 35.49101122, 35.5137886, 35.5184518, 35.52152461, 35.52406963, 35.52520407, 35.52497263, 35.52339801, 35.52043832, 35.51734012, 35.5129186, 35.50722222, 35.50025704, 35.49231697, 35.48494716, 35.4763348, 35.46652212, 35.45601582, 35.44506258, 35.43505231, 35.4239217, 35.42605205, 35.43089057, 35.43494829, 35.43927405, 35.44273081, 35.44546887, 35.44603379, 35.44595851, 35.44620167, 35.44893802, 35.45996324, 35.47417559, 35.49357009, 35.5134486, 35.53302916, 35.55233586, 35.57136862, 35.59029728, 35.60975767, 35.62898834, 35.64803054, 35.66687606, 35.68581469, 35.70550284, 35.72505624, 35.74447999, 35.76380072, 35.78333354, 35.8036659, 35.83178912, 35.86489129, 35.88908913, 35.91097701, 35.93390662, 35.95686746, 35.97989273, 36.00297704, 36.02645403, 36.05070718, 36.07505462, 36.09952598, 36.12413335, 36.1491556, 36.17480719, 36.19369087, 36.20528492, 36.21687948,  };
  }

  /**
   * SSP2_GINI Table Function
   */
  public static final TableFunction SSP2_GINI = new TableFunction( _SSP2_GINI_Arguments_xjal, _SSP2_GINI_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP2_GINI( double x ) { return SSP2_GINI.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income1_Arguments_xjal = _SSP4_Income1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income1_Values_xjal = _SSP4_Income1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income1_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 55.2733035, 56.50157613, 57.50980822, 58.31619318, 58.97916937, 59.55309879, 60.06307329, 60.53529852, 60.98739284, 61.43859299, 61.88304593, 62.31631982, 62.73639375, 63.14286166, 63.53780029, 63.9295403, 64.32458381,  };
  }

  /**
   * SSP4_Income1 Table Function
   */
  public static final TableFunction SSP4_Income1 = new TableFunction( _SSP4_Income1_Arguments_xjal, _SSP4_Income1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP4_Income1( double x ) { return SSP4_Income1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income2_Arguments_xjal = _SSP4_Income2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income2_Values_xjal = _SSP4_Income2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Income2_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 54.90804103, 55.73546325, 56.58562218, 57.46139444, 58.30493764, 59.12222645, 59.8575994, 60.54952479, 61.27966268, 62.03966649, 62.79699347, 63.51802829, 64.23153989, 64.93087229, 65.64139295, 66.38440801, 67.14209815,  };
  }

  /**
   * SSP4_Income2 Table Function
   */
  public static final TableFunction SSP4_Income2 = new TableFunction( _SSP4_Income2_Arguments_xjal, _SSP4_Income2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP4_Income2( double x ) { return SSP4_Income2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income1_Arguments_xjal = _SSP5_Income1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income1_Values_xjal = _SSP5_Income1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income1_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 55.19716731, 56.46269729, 57.67432173, 58.79387447, 59.78042427, 60.6449346, 61.40808382, 62.11726245, 62.80569043, 63.51012915, 64.207441, 64.88073096, 65.5449161, 66.21276067, 66.88157081, 67.55319571, 68.23391106,  };
  }

  /**
   * SSP5_Income1 Table Function
   */
  public static final TableFunction SSP5_Income1 = new TableFunction( _SSP5_Income1_Arguments_xjal, _SSP5_Income1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP5_Income1( double x ) { return SSP5_Income1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income2_Arguments_xjal = _SSP5_Income2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 195.0, 255.0, 315.0, 375.0, 435.0, 495.0, 555.0, 615.0, 675.0, 735.0, 795.0, 855.0, 915.0, 975.0, 1035.0, 1095.0, 1155.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income2_Values_xjal = _SSP5_Income2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Income2_Values_xjal() {
    return new double[] { 38.168, 41.496, 45.448, 52.936, 52.156, 53.612, 55.484, 54.392, 55.224, 54.91382295, 55.79282578, 56.81164417, 57.92552163, 59.0080799, 60.04713468, 60.98352604, 61.88239538, 62.82141304, 63.82196178, 64.86617706, 65.91078, 66.95340489, 68.00127013, 69.06718397, 70.15878385, 71.2772028,  };
  }

  /**
   * SSP5_Income2 Table Function
   */
  public static final TableFunction SSP5_Income2 = new TableFunction( _SSP5_Income2_Arguments_xjal, _SSP5_Income2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP5_Income2( double x ) { return SSP5_Income2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_GINI_Arguments_xjal = _SSP3_GINI_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_GINI_Arguments_xjal() {
    return new double[] { 0.0, 173.0, 185.0, 197.0, 209.0, 221.0, 233.0, 245.0, 257.0, 269.0, 281.0, 293.0, 305.0, 317.0, 329.0, 341.0, 353.0, 365.0, 377.0, 389.0, 401.0, 413.0, 425.0, 437.0, 449.0, 461.0, 473.0, 485.0, 497.0, 509.0, 521.0, 533.0, 545.0, 557.0, 569.0, 581.0, 593.0, 605.0, 617.0, 629.0, 641.0, 653.0, 665.0, 677.0, 689.0, 701.0, 713.0, 725.0, 737.0, 749.0, 761.0, 773.0, 785.0, 797.0, 809.0, 821.0, 833.0, 845.0, 857.0, 869.0, 881.0, 893.0, 905.0, 917.0, 929.0, 941.0, 953.0, 965.0, 977.0, 989.0, 1001.0, 1013.0, 1025.0, 1037.0, 1049.0, 1061.0, 1073.0, 1085.0, 1097.0, 1109.0, 1121.0, 1133.0, 1145.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_GINI_Values_xjal = _SSP3_GINI_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_GINI_Values_xjal() {
    return new double[] { 34.94, 35.10764834, 35.16953216, 35.2303627, 35.29080525, 35.35695012, 35.42266749, 35.48792028, 35.55265767, 35.61687964, 35.68273205, 35.74796471, 35.82777455, 35.91990618, 36.01092098, 36.10243479, 36.18994133, 36.27794653, 36.36640955, 36.45527082, 36.54600625, 36.63705651, 36.72840319, 36.79756342, 36.86093967, 36.92633966, 36.99186659, 37.0575421, 37.12337492, 37.18970186, 37.25932652, 37.32909026, 37.39901251, 37.46944712, 37.54059987, 37.6148214, 37.68916386, 37.76361942, 37.83817911, 37.91303486, 37.9897226, 38.06647817, 38.14332381, 38.2202674, 38.29719723, 38.37472188, 38.45231065, 38.529984, 38.60775243, 38.68546422, 38.76347869, 38.83492226, 38.90621422, 38.97753194, 39.04881559, 39.12034224, 39.19187073, 39.26341644, 39.33498622, 39.4066787, 39.47870414, 39.55073875, 39.6227937, 39.69691637, 39.77632596, 39.85619337, 39.93612114, 40.01611624, 40.10621234, 40.20051879, 40.298849, 40.39744403, 40.49630928, 40.59544348, 40.69482416, 40.79439643, 40.90110022, 41.00871979, 41.11661659, 41.22471587, 41.3328422, 41.44123524, 41.54990281, 41.65884506,  };
  }

  /**
   * SSP3_GINI Table Function
   */
  public static final TableFunction SSP3_GINI = new TableFunction( _SSP3_GINI_Arguments_xjal, _SSP3_GINI_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP3_GINI( double x ) { return SSP3_GINI.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_GINI_Arguments_xjal = _SSP4_GINI_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_GINI_Arguments_xjal() {
    return new double[] { 0.0, 173.0, 185.0, 197.0, 209.0, 221.0, 233.0, 245.0, 257.0, 269.0, 281.0, 293.0, 305.0, 317.0, 329.0, 341.0, 353.0, 365.0, 377.0, 389.0, 401.0, 413.0, 425.0, 437.0, 449.0, 461.0, 473.0, 485.0, 497.0, 509.0, 521.0, 533.0, 545.0, 557.0, 569.0, 581.0, 593.0, 605.0, 617.0, 629.0, 641.0, 653.0, 665.0, 677.0, 689.0, 701.0, 713.0, 725.0, 737.0, 749.0, 761.0, 773.0, 785.0, 797.0, 809.0, 821.0, 833.0, 845.0, 857.0, 869.0, 881.0, 893.0, 905.0, 917.0, 929.0, 941.0, 953.0, 965.0, 977.0, 989.0, 1001.0, 1013.0, 1025.0, 1037.0, 1049.0, 1061.0, 1073.0, 1085.0, 1097.0, 1109.0, 1121.0, 1133.0, 1145.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_GINI_Values_xjal = _SSP4_GINI_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_GINI_Values_xjal() {
    return new double[] { 34.94, 35.13368087, 35.1991291, 35.26404663, 35.32972567, 35.40301185, 35.47705806, 35.55182875, 35.62727517, 35.70526808, 35.82350466, 35.94455923, 36.06615631, 36.18816972, 36.31048716, 36.43049722, 36.50958349, 36.58849194, 36.6672266, 36.74579161, 36.82589085, 36.90578329, 36.98549178, 37.06502722, 37.14453836, 37.22570217, 37.30596696, 37.37442918, 37.44277375, 37.5116883, 37.58339128, 37.65500712, 37.72655856, 37.80598679, 37.88955154, 37.97623944, 38.07467344, 38.18841665, 38.30212519, 38.41621533, 38.53222261, 38.64829623, 38.76447198, 38.8807754, 38.99754849, 39.12119191, 39.24907243, 39.37730691, 39.50581068, 39.63480115, 39.76500231, 39.89545785, 40.02620149, 40.15726355, 40.28888713, 40.42465243, 40.56170603, 40.69924331, 40.83721989, 40.97563135, 41.1146035, 41.2540222, 41.39392473, 41.53433931, 41.66939703, 41.79310357, 41.91771585, 42.04685812, 42.17649032, 42.306107, 42.43575512, 42.56592136, 42.69663364, 42.82790884, 42.95943398, 43.09124544, 43.22365302, 43.35668858, 43.49036817, 43.62426008, 43.75838812, 43.89318322, 44.02867867, 44.16489144,  };
  }

  /**
   * SSP4_GINI Table Function
   */
  public static final TableFunction SSP4_GINI = new TableFunction( _SSP4_GINI_Arguments_xjal, _SSP4_GINI_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP4_GINI( double x ) { return SSP4_GINI.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_GINI_Arguments_xjal = _SSP5_GINI_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_GINI_Arguments_xjal() {
    return new double[] { 0.0, 173.0, 185.0, 197.0, 209.0, 221.0, 233.0, 245.0, 257.0, 269.0, 281.0, 293.0, 305.0, 317.0, 329.0, 341.0, 353.0, 365.0, 377.0, 389.0, 401.0, 413.0, 425.0, 437.0, 449.0, 461.0, 473.0, 485.0, 497.0, 509.0, 521.0, 533.0, 545.0, 557.0, 569.0, 581.0, 593.0, 605.0, 617.0, 629.0, 641.0, 653.0, 665.0, 677.0, 689.0, 701.0, 713.0, 725.0, 737.0, 749.0, 761.0, 773.0, 785.0, 797.0, 809.0, 821.0, 833.0, 845.0, 857.0, 869.0, 881.0, 893.0, 905.0, 917.0, 929.0, 941.0, 953.0, 965.0, 977.0, 989.0, 1001.0, 1013.0, 1025.0, 1037.0, 1049.0, 1061.0, 1073.0, 1085.0, 1097.0, 1109.0, 1121.0, 1133.0, 1145.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_GINI_Values_xjal = _SSP5_GINI_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_GINI_Values_xjal() {
    return new double[] { 34.94, 34.73920216, 34.75450731, 34.76578168, 34.77471856, 34.78581295, 34.7945108, 34.80072543, 34.80436291, 34.80534502, 34.81569541, 34.85770134, 34.89684915, 34.93289113, 34.95599794, 34.96568829, 34.94798256, 34.92593814, 34.89965399, 34.86902599, 34.83586059, 34.79846764, 34.73783436, 34.67313577, 34.60458923, 34.56331788, 34.52667486, 34.48622422, 34.44199628, 34.3942589, 34.34452728, 34.3002584, 34.23044468, 34.15136698, 34.09733377, 34.04430189, 33.9950477, 33.94497199, 33.89316852, 33.84083607, 33.78911285, 33.7357396, 33.68075397, 33.62414338, 33.56666674, 33.50896597, 33.44966773, 33.39790404, 33.34670478, 33.29433402, 33.24394049, 33.1988487, 33.15254677, 33.10504548, 33.0571586, 33.00934858, 32.96034224, 32.9101456, 32.85875784, 32.80788939, 32.75781555, 32.70659436, 32.65422448, 32.6006963, 32.5479545, 32.49596522, 32.44286645, 32.38863823, 32.3332798, 32.2798883, 32.2278972, 32.17486405, 32.12077536, 32.06561809, 32.0118991, 31.9588057, 31.90470025, 31.84958831, 31.79343436, 31.73855405, 31.68398972, 31.628433, 31.57186674, 31.51428114,  };
  }

  /**
   * SSP5_GINI Table Function
   */
  public static final TableFunction SSP5_GINI = new TableFunction( _SSP5_GINI_Arguments_xjal, _SSP5_GINI_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP5_GINI( double x ) { return SSP5_GINI.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop1_Arguments_xjal = _SSP2_Pop1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop1_Values_xjal = _SSP2_Pop1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop1_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.598729857E7, 2.78205151E7, 2.956204787E7, 3.122663888E7, 3.285768479E7, 3.446611355E7, 3.603292143E7, 3.752893561E7, 3.892874189E7, 4.012487049E7, 4.112421227E7, 4.193082199E7, 4.253128968E7, 4.291498048E7, 4.305491623E7, 4.293011184E7, 4.257732546E7,  };
  }

  /**
   * SSP2_Pop1 Table Function
   */
  public static final TableFunction SSP2_Pop1 = new TableFunction( _SSP2_Pop1_Arguments_xjal, _SSP2_Pop1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP2_Pop1( double x ) { return SSP2_Pop1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop1_Arguments_xjal = _SSP3_Pop1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop1_Values_xjal = _SSP3_Pop1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop1_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.514021826E7, 2.610133349E7, 2.683633334E7, 2.742449996E7, 2.789756971E7, 2.825162802E7, 2.846186516E7, 2.852247191E7, 2.84361907E7, 2.817914004E7, 2.777352069E7, 2.72352037E7, 2.656232329E7, 2.577596665E7, 2.489638163E7, 2.394789627E7, 2.292130679E7,  };
  }

  /**
   * SSP3_Pop1 Table Function
   */
  public static final TableFunction SSP3_Pop1 = new TableFunction( _SSP3_Pop1_Arguments_xjal, _SSP3_Pop1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP3_Pop1( double x ) { return SSP3_Pop1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop1_Arguments_xjal = _SSP4_Pop1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop1_Values_xjal = _SSP4_Pop1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop1_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.580708701E7, 2.746187357E7, 2.896285263E7, 3.037195518E7, 3.170577628E7, 3.295309759E7, 3.408693997E7, 3.510258385E7, 3.598326599E7, 3.663456931E7, 3.70621641E7, 3.726174512E7, 3.721990651E7, 3.693832948E7, 3.640512054E7, 3.560883226E7, 3.458958864E7,  };
  }

  /**
   * SSP4_Pop1 Table Function
   */
  public static final TableFunction SSP4_Pop1 = new TableFunction( _SSP4_Pop1_Arguments_xjal, _SSP4_Pop1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP4_Pop1( double x ) { return SSP4_Pop1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop1_Arguments_xjal = _SSP5_Pop1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop1_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop1_Values_xjal = _SSP5_Pop1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop1_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.68448778E7, 2.956330816E7, 3.234037885E7, 3.513412305E7, 3.802542698E7, 4.105868063E7, 4.422179774E7, 4.743509293E7, 5.065734381E7, 5.366394672E7, 5.642656564E7, 5.897518386E7, 6.120092619E7, 6.30402912E7, 6.449186987E7, 6.560652439E7, 6.644890155E7,  };
  }

  /**
   * SSP5_Pop1 Table Function
   */
  public static final TableFunction SSP5_Pop1 = new TableFunction( _SSP5_Pop1_Arguments_xjal, _SSP5_Pop1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP5_Pop1( double x ) { return SSP5_Pop1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop2_Arguments_xjal = _SSP1_Pop2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop2_Values_xjal = _SSP1_Pop2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_Pop2_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.6044E7, 2.792E7, 2.9722E7, 3.1476E7, 3.3215E7, 3.4931E7, 3.6592E7, 3.8166E7, 3.9637E7, 4.0866E7, 4.183E7, 4.2551E7, 4.294E7, 4.2978E7, 4.2699E7, 4.2168E7, 4.1441E7,  };
  }

  /**
   * SSP1_Pop2 Table Function
   */
  public static final TableFunction SSP1_Pop2 = new TableFunction( _SSP1_Pop2_Arguments_xjal, _SSP1_Pop2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP1_Pop2( double x ) { return SSP1_Pop2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop2_Arguments_xjal = _SSP2_Pop2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop2_Values_xjal = _SSP2_Pop2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_Pop2_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.5987E7, 2.7821E7, 2.9562E7, 3.1227E7, 3.2858E7, 3.4466E7, 3.6033E7, 3.7529E7, 3.8929E7, 4.0125E7, 4.1124E7, 4.1931E7, 4.2531E7, 4.2915E7, 4.3055E7, 4.293E7, 4.2577E7,  };
  }

  /**
   * SSP2_Pop2 Table Function
   */
  public static final TableFunction SSP2_Pop2 = new TableFunction( _SSP2_Pop2_Arguments_xjal, _SSP2_Pop2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP2_Pop2( double x ) { return SSP2_Pop2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop2_Arguments_xjal = _SSP3_Pop2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop2_Values_xjal = _SSP3_Pop2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_Pop2_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.514021826E7, 2.610133349E7, 2.683633334E7, 2.742449996E7, 2.789756971E7, 2.825162802E7, 2.846186516E7, 2.852247191E7, 2.84361907E7, 2.817914004E7, 2.777352069E7, 2.72352037E7, 2.656232329E7, 2.577596665E7, 2.489638163E7, 2.394789627E7, 2.292130679E7,  };
  }

  /**
   * SSP3_Pop2 Table Function
   */
  public static final TableFunction SSP3_Pop2 = new TableFunction( _SSP3_Pop2_Arguments_xjal, _SSP3_Pop2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP3_Pop2( double x ) { return SSP3_Pop2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop2_Arguments_xjal = _SSP4_Pop2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop2_Values_xjal = _SSP4_Pop2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_Pop2_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.5807E7, 2.7462E7, 2.8963E7, 3.0372E7, 3.1706E7, 3.2953E7, 3.4087E7, 3.5103E7, 3.5983E7, 3.6635E7, 3.7062E7, 3.7262E7, 3.722E7, 3.6938E7, 3.6405E7, 3.5609E7, 3.459E7,  };
  }

  /**
   * SSP4_Pop2 Table Function
   */
  public static final TableFunction SSP4_Pop2 = new TableFunction( _SSP4_Pop2_Arguments_xjal, _SSP4_Pop2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP4_Pop2( double x ) { return SSP4_Pop2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop2_Arguments_xjal = _SSP5_Pop2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop2_Arguments_xjal() {
    return new double[] { 0.0, 3.0, 27.0, 51.0, 75.0, 99.0, 123.0, 147.0, 171.0, 197.0, 257.0, 317.0, 377.0, 437.0, 497.0, 557.0, 617.0, 677.0, 737.0, 797.0, 857.0, 917.0, 977.0, 1037.0, 1097.0, 1157.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop2_Values_xjal = _SSP5_Pop2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_Pop2_Values_xjal() {
    return new double[] { 1.98267295E7, 1.9932722E7, 2.0450966E7, 2.1249199E7, 2.203175E7, 2.2733465E7, 2.3475686E7, 2.4190907E7, 2.4982688E7, 2.6845E7, 2.9563E7, 3.234E7, 3.5134E7, 3.8025E7, 4.1059E7, 4.4222E7, 4.7435E7, 5.0657E7, 5.3664E7, 5.6427E7, 5.8975E7, 6.1201E7, 6.304E7, 6.4492E7, 6.5607E7, 6.6449E7,  };
  }

  /**
   * SSP5_Pop2 Table Function
   */
  public static final TableFunction SSP5_Pop2 = new TableFunction( _SSP5_Pop2_Arguments_xjal, _SSP5_Pop2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP5_Pop2( double x ) { return SSP5_Pop2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP1_Arguments_xjal = _SSP1_INP1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP1_Values_xjal = _SSP1_INP1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.13,  };
  }

  /**
   * SSP1_INP1 Table Function
   */
  public static final TableFunction SSP1_INP1 = new TableFunction( _SSP1_INP1_Arguments_xjal, _SSP1_INP1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP1_INP1( double x ) { return SSP1_INP1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP1_Arguments_xjal = _SSP2_INP1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP1_Values_xjal = _SSP2_INP1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.14,  };
  }

  /**
   * SSP2_INP1 Table Function
   */
  public static final TableFunction SSP2_INP1 = new TableFunction( _SSP2_INP1_Arguments_xjal, _SSP2_INP1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP2_INP1( double x ) { return SSP2_INP1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP1_Arguments_xjal = _SSP3_INP1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP1_Values_xjal = _SSP3_INP1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.15,  };
  }

  /**
   * SSP3_INP1 Table Function
   */
  public static final TableFunction SSP3_INP1 = new TableFunction( _SSP3_INP1_Arguments_xjal, _SSP3_INP1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP3_INP1( double x ) { return SSP3_INP1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP1_Arguments_xjal = _SSP4_INP1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP1_Values_xjal = _SSP4_INP1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.16,  };
  }

  /**
   * SSP4_INP1 Table Function
   */
  public static final TableFunction SSP4_INP1 = new TableFunction( _SSP4_INP1_Arguments_xjal, _SSP4_INP1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP4_INP1( double x ) { return SSP4_INP1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP1_Arguments_xjal = _SSP5_INP1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP1_Values_xjal = _SSP5_INP1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.18,  };
  }

  /**
   * SSP5_INP1 Table Function
   */
  public static final TableFunction SSP5_INP1 = new TableFunction( _SSP5_INP1_Arguments_xjal, _SSP5_INP1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP5_INP1( double x ) { return SSP5_INP1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP2_Arguments_xjal = _SSP1_INP2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP2_Values_xjal = _SSP1_INP2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP1_INP2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.12,  };
  }

  /**
   * SSP1_INP2 Table Function
   */
  public static final TableFunction SSP1_INP2 = new TableFunction( _SSP1_INP2_Arguments_xjal, _SSP1_INP2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP1_INP2( double x ) { return SSP1_INP2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP2_Arguments_xjal = _SSP2_INP2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP2_Values_xjal = _SSP2_INP2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP2_INP2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.13,  };
  }

  /**
   * SSP2_INP2 Table Function
   */
  public static final TableFunction SSP2_INP2 = new TableFunction( _SSP2_INP2_Arguments_xjal, _SSP2_INP2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP2_INP2( double x ) { return SSP2_INP2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP2_Arguments_xjal = _SSP3_INP2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP2_Values_xjal = _SSP3_INP2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP3_INP2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.14,  };
  }

  /**
   * SSP3_INP2 Table Function
   */
  public static final TableFunction SSP3_INP2 = new TableFunction( _SSP3_INP2_Arguments_xjal, _SSP3_INP2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP3_INP2( double x ) { return SSP3_INP2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP2_Arguments_xjal = _SSP4_INP2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP2_Values_xjal = _SSP4_INP2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP4_INP2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.15,  };
  }

  /**
   * SSP4_INP2 Table Function
   */
  public static final TableFunction SSP4_INP2 = new TableFunction( _SSP4_INP2_Arguments_xjal, _SSP4_INP2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP4_INP2( double x ) { return SSP4_INP2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP2_Arguments_xjal = _SSP5_INP2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP2_Values_xjal = _SSP5_INP2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _SSP5_INP2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.17,  };
  }

  /**
   * SSP5_INP2 Table Function
   */
  public static final TableFunction SSP5_INP2 = new TableFunction( _SSP5_INP2_Arguments_xjal, _SSP5_INP2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double SSP5_INP2( double x ) { return SSP5_INP2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP11_Arguments_xjal = _GDPSSP11_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP11_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP11_Values_xjal = _GDPSSP11_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP11_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 4.8872682991E10, 5.6881955364E10, 5.6881955364E10, 5.6881955364E10, 5.6881955364E10, 5.6881955364E10, 5.9136694465E10, 5.9136694465E10, 5.9136694465E10, 5.9136694465E10, 5.9136694465E10, 5.9850901427E10, 5.9850901427E10, 5.9850901427E10, 5.9850901427E10, 5.9850901427E10, 5.9639945112E10, 5.9639945112E10, 5.9639945112E10, 5.9639945112E10, 5.9639945112E10, 5.915020162E10, 5.915020162E10, 5.915020162E10, 5.915020162E10, 5.915020162E10, 5.8190711603E10, 5.8190711603E10, 5.8190711603E10, 5.8190711603E10, 5.8190711603E10, 5.7911314427E10, 5.7911314427E10, 5.7911314427E10, 5.7911314427E10, 5.7911314427E10, 5.8369013112E10, 5.8369013112E10, 5.8369013112E10, 5.8369013112E10, 5.8369013112E10, 5.7644993821E10, 5.7644993821E10, 5.7644993821E10, 5.7644993821E10, 5.7644993821E10, 5.5105338716E10, 5.5105338716E10, 5.5105338716E10, 5.5105338716E10, 5.5105338716E10, 5.1526600304E10, 5.1526600304E10, 5.1526600304E10, 5.1526600304E10, 5.1526600304E10, 4.6629436386E10, 4.6629436386E10, 4.6629436386E10, 4.6629436386E10, 4.6629436386E10, 4.1214687595E10, 4.1214687595E10, 4.1214687595E10, 4.1214687595E10, 4.1214687595E10, 3.4844664706E10, 3.4844664706E10, 3.4844664706E10, 3.4844664706E10, 3.4844664706E10, 2.917697119E10, 2.917697119E10, 2.917697119E10, 2.917697119E10, 2.917697119E10, 2.5329717862E10, 2.5329717862E10, 2.5329717862E10, 2.5329717862E10, 2.5329717862E10,  };
  }

  /**
   * GDPSSP11 Table Function
   */
  public final TableFunction GDPSSP11 = new TableFunction( _GDPSSP11_Arguments_xjal, _GDPSSP11_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP11( double x ) { return GDPSSP11.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP1_Arguments_xjal = _PSSP1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP1_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP1_Values_xjal = _PSSP1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP1_Values_xjal() {
    return new double[] { 1.8, 1.8126, 1.8252882, 1.838065217, 1.850931674, 1.863888196, 1.876935413, 1.890073961, 1.903304479, 1.91662761, 1.930044003, 1.943554311, 1.957159191, 1.970859306, 1.984655321, 1.998547908, 2.012537744, 2.026625508, 2.042838512, 2.05918122, 2.07565467, 2.092259907, 2.108997986, 2.12586997, 2.14287693, 2.160019945, 2.177300105, 2.194718506, 2.212276254, 2.229974464, 2.24781426, 2.265796774, 2.283923148, 2.302194533, 2.320612089, 2.339176986, 2.357890402, 2.376753525, 2.395767553, 2.414933694, 2.434253163, 2.453727189, 2.473357006, 2.493143862, 2.513089013, 2.533193725, 2.553459275, 2.573886949, 2.594478045, 2.615233869, 2.63615574, 2.657244986, 2.678502946, 2.699930969, 2.721530417, 2.74330266,  };
  }

  /**
   * PSSP1 Table Function
   */
  public final TableFunction PSSP1 = new TableFunction( _PSSP1_Arguments_xjal, _PSSP1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double PSSP1( double x ) { return PSSP1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP2_Arguments_xjal = _PSSP2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP2_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP2_Values_xjal = _PSSP2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP2_Values_xjal() {
    return new double[] { 1.8, 1.8126, 1.8252882, 1.838065217, 1.850931674, 1.863888196, 1.876935413, 1.890073961, 1.903304479, 1.91662761, 1.930044003, 1.943554311, 1.957159191, 1.970859306, 1.984655321, 1.998547908, 2.012537744, 2.026625508, 2.040811886, 2.055097569, 2.069483252, 2.083969635, 2.098557423, 2.113247325, 2.128040056, 2.142936336, 2.157936891, 2.173042449, 2.188253746, 2.203571522, 2.218996523, 2.234529499, 2.250171205, 2.265922404, 2.28178386, 2.297756347, 2.313840642, 2.330037526, 2.346347789, 2.362772223, 2.379311629, 2.39596681, 2.412738578, 2.429627748, 2.446635142, 2.463761588, 2.48100792, 2.498374975, 2.5158636, 2.533474645, 2.551208968, 2.56906743, 2.587050902, 2.605160259, 2.62339638, 2.641760155,  };
  }

  /**
   * PSSP2 Table Function
   */
  public final TableFunction PSSP2 = new TableFunction( _PSSP2_Arguments_xjal, _PSSP2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double PSSP2( double x ) { return PSSP2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP3_Arguments_xjal = _PSSP3_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP3_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP3_Values_xjal = _PSSP3_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP3_Values_xjal() {
    return new double[] { 1.8, 1.8126, 1.8252882, 1.838065217, 1.850931674, 1.863888196, 1.876935413, 1.890073961, 1.903304479, 1.91662761, 1.930044003, 1.943554311, 1.957159191, 1.970859306, 1.984655321, 1.998547908, 2.012537744, 2.026625508, 2.032705384, 2.0388035, 2.044919911, 2.051054671, 2.057207835, 2.063379458, 2.069569597, 2.075778305, 2.08200564, 2.088251657, 2.094516412, 2.100799961, 2.107102361, 2.113423668, 2.119763939, 2.126123231, 2.132501601, 2.138899106, 2.145315803, 2.15175175, 2.158207006, 2.164681627, 2.171175672, 2.177689199, 2.184222266, 2.190774933, 2.197347258, 2.2039393, 2.210551117, 2.217182771, 2.223834319, 2.230505822, 2.237197339, 2.243908932, 2.250640658, 2.25739258, 2.264164758, 2.270957252,  };
  }

  /**
   * PSSP3 Table Function
   */
  public final TableFunction PSSP3 = new TableFunction( _PSSP3_Arguments_xjal, _PSSP3_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double PSSP3( double x ) { return PSSP3.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP4_Arguments_xjal = _PSSP4_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP4_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP4_Values_xjal = _PSSP4_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP4_Values_xjal() {
    return new double[] { 1.8, 1.8126, 1.8252882, 1.838065217, 1.850931674, 1.863888196, 1.876935413, 1.890073961, 1.903304479, 1.91662761, 1.930044003, 1.943554311, 1.957159191, 1.970859306, 1.984655321, 1.998547908, 2.012537744, 2.026625508, 2.038785261, 2.051017972, 2.06332408, 2.075704025, 2.088158249, 2.100687198, 2.113291321, 2.125971069, 2.138726896, 2.151559257, 2.164468613, 2.177455424, 2.190520157, 2.203663278, 2.216885258, 2.230186569, 2.243567689, 2.257029095, 2.270571269, 2.284194697, 2.297899865, 2.311687264, 2.325557388, 2.339510732, 2.353547797, 2.367669083, 2.381875098, 2.396166348, 2.410543346, 2.425006607, 2.439556646, 2.454193986, 2.46891915, 2.483732665, 2.498635061, 2.513626871, 2.528708632, 2.543880884,  };
  }

  /**
   * PSSP4 Table Function
   */
  public final TableFunction PSSP4 = new TableFunction( _PSSP4_Arguments_xjal, _PSSP4_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double PSSP4( double x ) { return PSSP4.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP5_Arguments_xjal = _PSSP5_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP5_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP5_Values_xjal = _PSSP5_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _PSSP5_Values_xjal() {
    return new double[] { 1.8, 1.8126, 1.8252882, 1.838065217, 1.850931674, 1.863888196, 1.876935413, 1.890073961, 1.903304479, 1.91662761, 1.930044003, 1.943554311, 1.957159191, 1.970859306, 1.984655321, 1.998547908, 2.012537744, 2.026625508, 2.048918388, 2.071456491, 2.094242512, 2.11727918, 2.140569251, 2.164115512, 2.187920783, 2.211987912, 2.236319779, 2.260919296, 2.285789408, 2.310933092, 2.336353356, 2.362053243, 2.388035829, 2.414304223, 2.440861569, 2.467711046, 2.494855868, 2.522299282, 2.550044575, 2.578095065, 2.606454111, 2.635125106, 2.664111482, 2.693416708, 2.723044292, 2.752997779, 2.783280755, 2.813896843, 2.844849708, 2.876143055, 2.907780629, 2.939766216, 2.972103644, 3.004796784, 3.037849549, 3.071265894,  };
  }

  /**
   * PSSP5 Table Function
   */
  public final TableFunction PSSP5 = new TableFunction( _PSSP5_Arguments_xjal, _PSSP5_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double PSSP5( double x ) { return PSSP5.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP12_Arguments_xjal = _GDPSSP12_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP12_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP12_Values_xjal = _GDPSSP12_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP12_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 3.44726E10, 3.5984E10, 3.5984E10, 3.5984E10, 3.5984E10, 3.5984E10, 3.93894E10, 3.93894E10, 3.93894E10, 3.93894E10, 3.93894E10, 4.39108E10, 4.39108E10, 4.39108E10, 4.39108E10, 4.39108E10, 4.71932E10, 4.71932E10, 4.71932E10, 4.71932E10, 4.71932E10, 5.00896E10, 5.00896E10, 5.00896E10, 5.00896E10, 5.00896E10, 4.94876E10, 4.94876E10, 4.94876E10, 4.94876E10, 4.94876E10, 4.99698E10, 4.99698E10, 4.99698E10, 4.99698E10, 4.99698E10, 5.36682E10, 5.36682E10, 5.36682E10, 5.36682E10, 5.36682E10, 5.59578E10, 5.59578E10, 5.59578E10, 5.59578E10, 5.59578E10, 5.62854E10, 5.62854E10, 5.62854E10, 5.62854E10, 5.62854E10, 5.39106E10, 5.39106E10, 5.39106E10, 5.39106E10, 5.39106E10, 5.11E10, 5.11E10, 5.11E10, 5.11E10, 5.11E10, 4.69546E10, 4.69546E10, 4.69546E10, 4.69546E10, 4.69546E10, 4.35084E10, 4.35084E10, 4.35084E10, 4.35084E10, 4.35084E10, 4.10654E10, 4.10654E10, 4.10654E10, 4.10654E10, 4.10654E10, 3.84064E10, 3.84064E10, 3.84064E10, 3.84064E10, 3.84064E10,  };
  }

  /**
   * GDPSSP12 Table Function
   */
  public final TableFunction GDPSSP12 = new TableFunction( _GDPSSP12_Arguments_xjal, _GDPSSP12_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP12( double x ) { return GDPSSP12.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _CL1_Arguments_xjal = _CL1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL1_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 324.0, 444.0, 564.0, 684.0, 804.0, 924.0, 1044.0, 1164.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL1_Values_xjal = _CL1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL1_Values_xjal() {
    return new double[] { 11025.07055, 11101.81351, 11178.55647, 11255.29942, 11332.04238, 11408.78534, 11485.52829, 11562.27125, 11639.01421, 11715.75717, 11792.50012, 11869.24308, 11945.98604, 12022.72899, 12099.47195, 12176.21491, 12252.95787, 12329.70082, 12627.57466, 12907.78304, 13183.22941, 13456.9583, 13723.55353, 13992.12108, 14265.47911, 14540.91901,  };
  }

  /**
   * CL1 Table Function
   */
  public final TableFunction CL1 = new TableFunction( _CL1_Arguments_xjal, _CL1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double CL1( double x ) { return CL1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _CL2_Arguments_xjal = _CL2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL2_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 324.0, 444.0, 564.0, 684.0, 804.0, 924.0, 1044.0, 1164.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL2_Values_xjal = _CL2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL2_Values_xjal() {
    return new double[] { 11025.07055, 11101.81351, 11178.55647, 11255.29942, 11332.04238, 11408.78534, 11485.52829, 11562.27125, 11639.01421, 11715.75717, 11792.50012, 11869.24308, 11945.98604, 12022.72899, 12099.47195, 12176.21491, 12252.95787, 12329.70082, 13468.90613, 14707.90031, 16043.68819, 17483.16367, 19029.36826, 20702.58704, 22517.63117, 24483.99766,  };
  }

  /**
   * CL2 Table Function
   */
  public final TableFunction CL2 = new TableFunction( _CL2_Arguments_xjal, _CL2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double CL2( double x ) { return CL2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _CL3_Arguments_xjal = _CL3_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL3_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 324.0, 444.0, 564.0, 684.0, 804.0, 924.0, 1044.0, 1164.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL3_Values_xjal = _CL3_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL3_Values_xjal() {
    return new double[] { 11025.07055, 11101.81351, 11178.55647, 11255.29942, 11332.04238, 11408.78534, 11485.52829, 11562.27125, 11639.01421, 11715.75717, 11792.50012, 11869.24308, 11945.98604, 12022.72899, 12099.47195, 12176.21491, 12252.95787, 12329.70082, 12682.20294, 13046.35621, 13411.6718, 13773.24297, 14123.20863, 14471.42824, 14817.66032, 15158.17792,  };
  }

  /**
   * CL3 Table Function
   */
  public final TableFunction CL3 = new TableFunction( _CL3_Arguments_xjal, _CL3_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double CL3( double x ) { return CL3.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _CL4_Arguments_xjal = _CL4_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL4_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 324.0, 444.0, 564.0, 684.0, 804.0, 924.0, 1044.0, 1164.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL4_Values_xjal = _CL4_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL4_Values_xjal() {
    return new double[] { 11025.07055, 11101.81351, 11178.55647, 11255.29942, 11332.04238, 11408.78534, 11485.52829, 11562.27125, 11639.01421, 11715.75717, 11792.50012, 11869.24308, 11945.98604, 12022.72899, 12099.47195, 12176.21491, 12252.95787, 12329.70082, 13456.45252, 14666.98712, 15977.43381, 17398.07843, 18932.37892, 20602.35575, 22421.48269, 24400.87714,  };
  }

  /**
   * CL4 Table Function
   */
  public final TableFunction CL4 = new TableFunction( _CL4_Arguments_xjal, _CL4_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double CL4( double x ) { return CL4.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _CL5_Arguments_xjal = _CL5_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL5_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 324.0, 444.0, 564.0, 684.0, 804.0, 924.0, 1044.0, 1164.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL5_Values_xjal = _CL5_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _CL5_Values_xjal() {
    return new double[] { 11025.07055, 11101.81351, 11178.55647, 11255.29942, 11332.04238, 11408.78534, 11485.52829, 11562.27125, 11639.01421, 11715.75717, 11792.50012, 11869.24308, 11945.98604, 12022.72899, 12099.47195, 12176.21491, 12252.95787, 12329.70082, 14258.74835, 16461.85395, 19002.12069, 21935.778, 25312.96927, 29215.10595, 33734.03546, 38958.20546,  };
  }

  /**
   * CL5 Table Function
   */
  public final TableFunction CL5 = new TableFunction( _CL5_Arguments_xjal, _CL5_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double CL5( double x ) { return CL5.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP21_Arguments_xjal = _GDPSSP21_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP21_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP21_Values_xjal = _GDPSSP21_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP21_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 4.9134824466E10, 5.6017528085E10, 5.6017528085E10, 5.6017528085E10, 5.6017528085E10, 5.6017528085E10, 5.6545467899E10, 5.6545467899E10, 5.6545467899E10, 5.6545467899E10, 5.6545467899E10, 5.5699192879E10, 5.5699192879E10, 5.5699192879E10, 5.5699192879E10, 5.5699192879E10, 5.437342462E10, 5.437342462E10, 5.437342462E10, 5.437342462E10, 5.437342462E10, 5.321283875E10, 5.321283875E10, 5.321283875E10, 5.321283875E10, 5.321283875E10, 5.1805122018E10, 5.1805122018E10, 5.1805122018E10, 5.1805122018E10, 5.1805122018E10, 5.1129886565E10, 5.1129886565E10, 5.1129886565E10, 5.1129886565E10, 5.1129886565E10, 5.0988498767E10, 5.0988498767E10, 5.0988498767E10, 5.0988498767E10, 5.0988498767E10, 4.999923236E10, 4.999923236E10, 4.999923236E10, 4.999923236E10, 4.999923236E10, 4.7874735107E10, 4.7874735107E10, 4.7874735107E10, 4.7874735107E10, 4.7874735107E10, 4.4926105346E10, 4.4926105346E10, 4.4926105346E10, 4.4926105346E10, 4.4926105346E10, 4.1302624896E10, 4.1302624896E10, 4.1302624896E10, 4.1302624896E10, 4.1302624896E10, 3.7462031218E10, 3.7462031218E10, 3.7462031218E10, 3.7462031218E10, 3.7462031218E10, 3.2956883071E10, 3.2956883071E10, 3.2956883071E10, 3.2956883071E10, 3.2956883071E10, 2.8094648535E10, 2.8094648535E10, 2.8094648535E10, 2.8094648535E10, 2.8094648535E10, 2.3707565298E10, 2.3707565298E10, 2.3707565298E10, 2.3707565298E10, 2.3707565298E10,  };
  }

  /**
   * GDPSSP21 Table Function
   */
  public final TableFunction GDPSSP21 = new TableFunction( _GDPSSP21_Arguments_xjal, _GDPSSP21_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP21( double x ) { return GDPSSP21.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP22_Arguments_xjal = _GDPSSP22_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP22_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP22_Values_xjal = _GDPSSP22_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP22_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 3.37858E10, 3.29378E10, 3.29378E10, 3.29378E10, 3.29378E10, 3.29378E10, 3.21494E10, 3.21494E10, 3.21494E10, 3.21494E10, 3.21494E10, 3.23334E10, 3.23334E10, 3.23334E10, 3.23334E10, 3.23334E10, 3.40896E10, 3.40896E10, 3.40896E10, 3.40896E10, 3.40896E10, 3.64488E10, 3.64488E10, 3.64488E10, 3.64488E10, 3.64488E10, 3.63876E10, 3.63876E10, 3.63876E10, 3.63876E10, 3.63876E10, 3.73554E10, 3.73554E10, 3.73554E10, 3.73554E10, 3.73554E10, 4.10978E10, 4.10978E10, 4.10978E10, 4.10978E10, 4.10978E10, 4.3779E10, 4.3779E10, 4.3779E10, 4.3779E10, 4.3779E10, 4.52948E10, 4.52948E10, 4.52948E10, 4.52948E10, 4.52948E10, 4.47772E10, 4.47772E10, 4.47772E10, 4.47772E10, 4.47772E10, 4.42112E10, 4.42112E10, 4.42112E10, 4.42112E10, 4.42112E10, 4.27718E10, 4.27718E10, 4.27718E10, 4.27718E10, 4.27718E10, 4.18478E10, 4.18478E10, 4.18478E10, 4.18478E10, 4.18478E10, 4.14E10, 4.14E10, 4.14E10, 4.14E10, 4.14E10, 4.08496E10, 4.08496E10, 4.08496E10, 4.08496E10, 4.08496E10,  };
  }

  /**
   * GDPSSP22 Table Function
   */
  public final TableFunction GDPSSP22 = new TableFunction( _GDPSSP22_Arguments_xjal, _GDPSSP22_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP22( double x ) { return GDPSSP22.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP31_Arguments_xjal = _GDPSSP31_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP31_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP31_Values_xjal = _GDPSSP31_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP31_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 1.6046780039E10, 1.1173169491E10, 1.1173169491E10, 1.1173169491E10, 1.1173169491E10, 1.1173169491E10, 1.0246766389E10, 1.0246766389E10, 1.0246766389E10, 1.0246766389E10, 1.0246766389E10, 1.1091171813E10, 1.1091171813E10, 1.1091171813E10, 1.1091171813E10, 1.1091171813E10, 1.2343480352E10, 1.2343480352E10, 1.2343480352E10, 1.2343480352E10, 1.2343480352E10, 1.3008087806E10, 1.3008087806E10, 1.3008087806E10, 1.3008087806E10, 1.3008087806E10, 1.2652832989E10, 1.2652832989E10, 1.2652832989E10, 1.2652832989E10, 1.2652832989E10, 1.1930956608E10, 1.1930956608E10, 1.1930956608E10, 1.1930956608E10, 1.1930956608E10, 1.101375848E10, 1.101375848E10, 1.101375848E10, 1.101375848E10, 1.101375848E10, 9.812552159E9, 9.812552159E9, 9.812552159E9, 9.812552159E9, 9.812552159E9, 8.481260899E9, 8.481260899E9, 8.481260899E9, 8.481260899E9, 8.481260899E9, 6.776815393E9, 6.776815393E9, 6.776815393E9, 6.776815393E9, 6.776815393E9, 4.708821027E9, 4.708821027E9, 4.708821027E9, 4.708821027E9, 4.708821027E9, 2.622980913E9, 2.622980913E9, 2.622980913E9, 2.622980913E9, 2.622980913E9, 8.077419489E8, 8.077419489E8, 8.077419489E8, 8.077419489E8, 8.077419489E8, -6.499499163E8, -6.499499163E8, -6.499499163E8, -6.499499163E8, -6.499499163E8, -2.05393314E9, -2.05393314E9, -2.05393314E9, -2.05393314E9, -2.05393314E9,  };
  }

  /**
   * GDPSSP31 Table Function
   */
  public final TableFunction GDPSSP31 = new TableFunction( _GDPSSP31_Arguments_xjal, _GDPSSP31_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP31( double x ) { return GDPSSP31.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP32_Arguments_xjal = _GDPSSP32_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP32_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP32_Values_xjal = _GDPSSP32_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP32_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 2.87566E10, 2.44136E10, 2.44136E10, 2.44136E10, 2.44136E10, 2.44136E10, 2.00674E10, 2.00674E10, 2.00674E10, 2.00674E10, 2.00674E10, 1.67698E10, 1.67698E10, 1.67698E10, 1.67698E10, 1.67698E10, 1.44316E10, 1.44316E10, 1.44316E10, 1.44316E10, 1.44316E10, 1.25792E10, 1.25792E10, 1.25792E10, 1.25792E10, 1.25792E10, 8.9166E9, 8.9166E9, 8.9166E9, 8.9166E9, 8.9166E9, 6.6892E9, 6.6892E9, 6.6892E9, 6.6892E9, 6.6892E9, 7.126E9, 7.126E9, 7.126E9, 7.126E9, 7.126E9, 6.9044E9, 6.9044E9, 6.9044E9, 6.9044E9, 6.9044E9, 5.5434E9, 5.5434E9, 5.5434E9, 5.5434E9, 5.5434E9, 2.9418E9, 2.9418E9, 2.9418E9, 2.9418E9, 2.9418E9, 1.1446E9, 1.1446E9, 1.1446E9, 1.1446E9, 1.1446E9, -4.428E8, -4.428E8, -4.428E8, -4.428E8, -4.428E8, -9.438E8, -9.438E8, -9.438E8, -9.438E8, -9.438E8, -8.814E8, -8.814E8, -8.814E8, -8.814E8, -8.814E8, -1.7308E9, -1.7308E9, -1.7308E9, -1.7308E9, -1.7308E9,  };
  }

  /**
   * GDPSSP32 Table Function
   */
  public final TableFunction GDPSSP32 = new TableFunction( _GDPSSP32_Arguments_xjal, _GDPSSP32_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP32( double x ) { return GDPSSP32.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP41_Arguments_xjal = _GDPSSP41_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP41_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP41_Values_xjal = _GDPSSP41_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP41_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 4.9747945167E10, 5.5888395215E10, 5.5888395215E10, 5.5888395215E10, 5.5888395215E10, 5.5888395215E10, 5.4351642048E10, 5.4351642048E10, 5.4351642048E10, 5.4351642048E10, 5.4351642048E10, 5.1443414275E10, 5.1443414275E10, 5.1443414275E10, 5.1443414275E10, 5.1443414275E10, 4.8913717477E10, 4.8913717477E10, 4.8913717477E10, 4.8913717477E10, 4.8913717477E10, 4.7177587309E10, 4.7177587309E10, 4.7177587309E10, 4.7177587309E10, 4.7177587309E10, 4.5235962431E10, 4.5235962431E10, 4.5235962431E10, 4.5235962431E10, 4.5235962431E10, 4.3858355162E10, 4.3858355162E10, 4.3858355162E10, 4.3858355162E10, 4.3858355162E10, 4.2674490647E10, 4.2674490647E10, 4.2674490647E10, 4.2674490647E10, 4.2674490646E10, 4.0487340039E10, 4.0487340039E10, 4.0487340039E10, 4.0487340039E10, 4.0487340039E10, 3.7554404168E10, 3.7554404168E10, 3.7554404168E10, 3.7554404168E10, 3.7554404168E10, 3.3691375307E10, 3.3691375307E10, 3.3691375307E10, 3.3691375307E10, 3.3691375307E10, 2.8801885754E10, 2.8801885754E10, 2.8801885754E10, 2.8801885754E10, 2.8801885754E10, 2.3279180748E10, 2.3279180748E10, 2.3279180748E10, 2.3279180748E10, 2.3279180748E10, 1.699847493E10, 1.699847493E10, 1.699847493E10, 1.699847493E10, 1.699847493E10, 1.0412292175E10, 1.0412292175E10, 1.0412292175E10, 1.0412292175E10, 1.0412292175E10, 4.628198534E9, 4.628198534E9, 4.628198534E9, 4.628198534E9, 4.628198534E9,  };
  }

  /**
   * GDPSSP41 Table Function
   */
  public final TableFunction GDPSSP41 = new TableFunction( _GDPSSP41_Arguments_xjal, _GDPSSP41_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP41( double x ) { return GDPSSP41.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP42_Arguments_xjal = _GDPSSP42_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP42_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP42_Values_xjal = _GDPSSP42_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP42_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 3.31086E10, 3.46444E10, 3.46444E10, 3.46444E10, 3.46444E10, 3.46444E10, 3.77476E10, 3.77476E10, 3.77476E10, 3.77476E10, 3.77476E10, 4.18208E10, 4.18208E10, 4.18208E10, 4.18208E10, 4.18208E10, 4.43932E10, 4.43932E10, 4.43932E10, 4.43932E10, 4.43932E10, 4.6827E10, 4.6827E10, 4.6827E10, 4.6827E10, 4.6827E10, 4.62074E10, 4.62074E10, 4.62074E10, 4.62074E10, 4.62074E10, 4.63612E10, 4.63612E10, 4.63612E10, 4.63612E10, 4.63612E10, 4.98558E10, 4.98558E10, 4.98558E10, 4.98558E10, 4.98558E10, 5.15976E10, 5.15976E10, 5.15976E10, 5.15976E10, 5.15976E10, 5.12606E10, 5.12606E10, 5.12606E10, 5.12606E10, 5.12606E10, 4.81108E10, 4.81108E10, 4.81108E10, 4.81108E10, 4.81108E10, 4.55014E10, 4.55014E10, 4.55014E10, 4.55014E10, 4.55014E10, 4.15836E10, 4.15836E10, 4.15836E10, 4.15836E10, 4.15836E10, 3.82276E10, 3.82276E10, 3.82276E10, 3.82276E10, 3.82276E10, 3.5193E10, 3.5193E10, 3.5193E10, 3.5193E10, 3.5193E10, 3.08062E10, 3.08062E10, 3.08062E10, 3.08062E10, 3.08062E10,  };
  }

  /**
   * GDPSSP42 Table Function
   */
  public final TableFunction GDPSSP42 = new TableFunction( _GDPSSP42_Arguments_xjal, _GDPSSP42_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP42( double x ) { return GDPSSP42.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP51_Arguments_xjal = _GDPSSP51_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP51_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP51_Values_xjal = _GDPSSP51_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP51_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 5.4681231122E10, 7.0134363656E10, 7.0134363656E10, 7.0134363656E10, 7.0134363656E10, 7.0134363656E10, 8.1271174116E10, 8.1271174116E10, 8.1271174116E10, 8.1271174116E10, 8.1271174116E10, 9.0544432701E10, 9.0544432701E10, 9.0544432701E10, 9.0544432701E10, 9.0544432701E10, 9.811343316E10, 9.811343316E10, 9.811343316E10, 9.811343316E10, 9.811343316E10, 1.05496E11, 1.05496E11, 1.05496E11, 1.05496E11, 1.05496E11, 1.12553E11, 1.12553E11, 1.12553E11, 1.12553E11, 1.12553E11, 1.20566E11, 1.20566E11, 1.20566E11, 1.20566E11, 1.20566E11, 1.30249E11, 1.30249E11, 1.30249E11, 1.30249E11, 1.30249E11, 1.38903E11, 1.38903E11, 1.38903E11, 1.38903E11, 1.38903E11, 1.44525E11, 1.44525E11, 1.44525E11, 1.44525E11, 1.44525E11, 1.48161E11, 1.48161E11, 1.48161E11, 1.48161E11, 1.48161E11, 1.49872E11, 1.49872E11, 1.49872E11, 1.49872E11, 1.49872E11, 1.50562E11, 1.50562E11, 1.50562E11, 1.50562E11, 1.50562E11, 1.49619E11, 1.49619E11, 1.49619E11, 1.49619E11, 1.49619E11, 1.49245E11, 1.49245E11, 1.49245E11, 1.49245E11, 1.49245E11, 1.51018E11, 1.51018E11, 1.51018E11, 1.51018E11, 1.51018E11,  };
  }

  /**
   * GDPSSP51 Table Function
   */
  public final TableFunction GDPSSP51 = new TableFunction( _GDPSSP51_Arguments_xjal, _GDPSSP51_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP51( double x ) { return GDPSSP51.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP52_Arguments_xjal = _GDPSSP52_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP52_Arguments_xjal() {
    return new double[] { 0.0, 12.0, 24.0, 36.0, 48.0, 60.0, 72.0, 84.0, 96.0, 108.0, 120.0, 132.0, 144.0, 156.0, 168.0, 180.0, 192.0, 204.0, 216.0, 228.0, 240.0, 252.0, 264.0, 276.0, 288.0, 300.0, 312.0, 324.0, 336.0, 348.0, 360.0, 372.0, 384.0, 396.0, 408.0, 420.0, 432.0, 444.0, 456.0, 468.0, 480.0, 492.0, 504.0, 516.0, 528.0, 540.0, 552.0, 564.0, 576.0, 588.0, 600.0, 612.0, 624.0, 636.0, 648.0, 660.0, 672.0, 684.0, 696.0, 708.0, 720.0, 732.0, 744.0, 756.0, 768.0, 780.0, 792.0, 804.0, 816.0, 828.0, 840.0, 852.0, 864.0, 876.0, 888.0, 900.0, 912.0, 924.0, 936.0, 948.0, 960.0, 972.0, 984.0, 996.0, 1008.0, 1020.0, 1032.0, 1044.0, 1056.0, 1068.0, 1080.0, 1092.0, 1104.0, 1116.0, 1128.0, 1140.0, 1152.0, 1164.0, 1176.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP52_Values_xjal = _GDPSSP52_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _GDPSSP52_Values_xjal() {
    return new double[] { 7.192493623E10, 1.46828E11, 8.0978637993E10, 5.260243193E10, 1.0652E11, 2.01259E11, -1.27056E11, 2.1994E11, 2.49887E11, 1.48497E11, 2.9376999864E10, -1.0874E11, -1.1701E11, -1.44017E11, 1.19905E11, 1.01799E11, -3.6047985591E10, -6.5273899686E10, 3.93958E10, 4.67556E10, 4.67556E10, 4.67556E10, 4.67556E10, 4.67556E10, 5.81792E10, 5.81792E10, 5.81792E10, 5.81792E10, 5.81792E10, 7.06076E10, 7.06076E10, 7.06076E10, 7.06076E10, 7.06076E10, 8.119E10, 8.119E10, 8.119E10, 8.119E10, 8.119E10, 9.26616E10, 9.26616E10, 9.26616E10, 9.26616E10, 9.26616E10, 1.00976E11, 1.00976E11, 1.00976E11, 1.00976E11, 1.00976E11, 1.11597E11, 1.11597E11, 1.11597E11, 1.11597E11, 1.11597E11, 1.28041E11, 1.28041E11, 1.28041E11, 1.28041E11, 1.28041E11, 1.44578E11, 1.44578E11, 1.44578E11, 1.44578E11, 1.44578E11, 1.61076E11, 1.61076E11, 1.61076E11, 1.61076E11, 1.61076E11, 1.74972E11, 1.74972E11, 1.74972E11, 1.74972E11, 1.74972E11, 1.86115E11, 1.86115E11, 1.86115E11, 1.86115E11, 1.86115E11, 1.9587E11, 1.9587E11, 1.9587E11, 1.9587E11, 1.9587E11, 2.06679E11, 2.06679E11, 2.06679E11, 2.06679E11, 2.06679E11, 2.19761E11, 2.19761E11, 2.19761E11, 2.19761E11, 2.19761E11, 2.35132E11, 2.35132E11, 2.35132E11, 2.35132E11, 2.35132E11,  };
  }

  /**
   * GDPSSP52 Table Function
   */
  public final TableFunction GDPSSP52 = new TableFunction( _GDPSSP52_Arguments_xjal, _GDPSSP52_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public final double GDPSSP52( double x ) { return GDPSSP52.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _homi_Arguments_xjal = _homi_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _homi_Arguments_xjal() {
    return new double[] { 0.0, 36.0, 96.0, 156.0, 204.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _homi_Values_xjal = _homi_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _homi_Values_xjal() {
    return new double[] { 0.0044, 0.0044, 0.0046, 0.0049, 0.0048,  };
  }

  /**
   * homi Table Function
   */
  public static final TableFunction homi = new TableFunction( _homi_Arguments_xjal, _homi_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double homi( double x ) { return homi.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_1_Arguments_xjal = _Construction_Cost_1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 556.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_1_Values_xjal = _Construction_Cost_1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.0,  };
  }

  /**
   * Construction_Cost_1 Table Function
   */
  public static final TableFunction Construction_Cost_1 = new TableFunction( _Construction_Cost_1_Arguments_xjal, _Construction_Cost_1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double Construction_Cost_1( double x ) { return Construction_Cost_1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_2_Arguments_xjal = _Construction_Cost_2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 556.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_2_Values_xjal = _Construction_Cost_2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.2,  };
  }

  /**
   * Construction_Cost_2 Table Function
   */
  public static final TableFunction Construction_Cost_2 = new TableFunction( _Construction_Cost_2_Arguments_xjal, _Construction_Cost_2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double Construction_Cost_2( double x ) { return Construction_Cost_2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_1_Arguments_xjal = _Productivity_Uncertainty_1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 556.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_1_Values_xjal = _Productivity_Uncertainty_1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_1_Values_xjal() {
    return new double[] { 1.0, 1.0, 0.95,  };
  }

  /**
   * Productivity_Uncertainty_1 Table Function
   */
  public static final TableFunction Productivity_Uncertainty_1 = new TableFunction( _Productivity_Uncertainty_1_Arguments_xjal, _Productivity_Uncertainty_1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double Productivity_Uncertainty_1( double x ) { return Productivity_Uncertainty_1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_2_Arguments_xjal = _Productivity_Uncertainty_2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 556.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_2_Values_xjal = _Productivity_Uncertainty_2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.05,  };
  }

  /**
   * Productivity_Uncertainty_2 Table Function
   */
  public static final TableFunction Productivity_Uncertainty_2 = new TableFunction( _Productivity_Uncertainty_2_Arguments_xjal, _Productivity_Uncertainty_2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double Productivity_Uncertainty_2( double x ) { return Productivity_Uncertainty_2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_3_Arguments_xjal = _Productivity_Uncertainty_3_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_3_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 556.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_3_Values_xjal = _Productivity_Uncertainty_3_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Productivity_Uncertainty_3_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.0,  };
  }

  /**
   * Productivity_Uncertainty_3 Table Function
   */
  public static final TableFunction Productivity_Uncertainty_3 = new TableFunction( _Productivity_Uncertainty_3_Arguments_xjal, _Productivity_Uncertainty_3_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double Productivity_Uncertainty_3( double x ) { return Productivity_Uncertainty_3.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_3_Arguments_xjal = _Construction_Cost_3_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_3_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 556.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_3_Values_xjal = _Construction_Cost_3_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Construction_Cost_3_Values_xjal() {
    return new double[] { 1.0, 1.0, 0.9,  };
  }

  /**
   * Construction_Cost_3 Table Function
   */
  public static final TableFunction Construction_Cost_3 = new TableFunction( _Construction_Cost_3_Arguments_xjal, _Construction_Cost_3_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_NEAREST,
       0.0 );
  
  public static final double Construction_Cost_3( double x ) { return Construction_Cost_3.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_2_Arguments_xjal = _Insurance_Premium_2_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_2_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_2_Values_xjal = _Insurance_Premium_2_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_2_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.37,  };
  }

  /**
   * Insurance_Premium_2 Table Function
   */
  public static final TableFunction Insurance_Premium_2 = new TableFunction( _Insurance_Premium_2_Arguments_xjal, _Insurance_Premium_2_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_2( double x ) { return Insurance_Premium_2.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_5_Arguments_xjal = _Insurance_Premium_5_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_5_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_5_Values_xjal = _Insurance_Premium_5_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_5_Values_xjal() {
    return new double[] { 1.0, 1.0, 2.57,  };
  }

  /**
   * Insurance_Premium_5 Table Function
   */
  public static final TableFunction Insurance_Premium_5 = new TableFunction( _Insurance_Premium_5_Arguments_xjal, _Insurance_Premium_5_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_5( double x ) { return Insurance_Premium_5.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_6_Arguments_xjal = _Insurance_Premium_6_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_6_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_6_Values_xjal = _Insurance_Premium_6_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_6_Values_xjal() {
    return new double[] { 1.0, 1.0, 4.76,  };
  }

  /**
   * Insurance_Premium_6 Table Function
   */
  public static final TableFunction Insurance_Premium_6 = new TableFunction( _Insurance_Premium_6_Arguments_xjal, _Insurance_Premium_6_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_6( double x ) { return Insurance_Premium_6.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_7_Arguments_xjal = _Insurance_Premium_7_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_7_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_7_Values_xjal = _Insurance_Premium_7_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_7_Values_xjal() {
    return new double[] { 1.0, 1.0, 8.71,  };
  }

  /**
   * Insurance_Premium_7 Table Function
   */
  public static final TableFunction Insurance_Premium_7 = new TableFunction( _Insurance_Premium_7_Arguments_xjal, _Insurance_Premium_7_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_7( double x ) { return Insurance_Premium_7.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_8_Arguments_xjal = _Insurance_Premium_8_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_8_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_8_Values_xjal = _Insurance_Premium_8_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_8_Values_xjal() {
    return new double[] { 1.0, 1.0, 21.11,  };
  }

  /**
   * Insurance_Premium_8 Table Function
   */
  public static final TableFunction Insurance_Premium_8 = new TableFunction( _Insurance_Premium_8_Arguments_xjal, _Insurance_Premium_8_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_8( double x ) { return Insurance_Premium_8.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_9_Arguments_xjal = _Insurance_Premium_9_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_9_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_9_Values_xjal = _Insurance_Premium_9_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_9_Values_xjal() {
    return new double[] { 1.0, 1.0, 87.56,  };
  }

  /**
   * Insurance_Premium_9 Table Function
   */
  public static final TableFunction Insurance_Premium_9 = new TableFunction( _Insurance_Premium_9_Arguments_xjal, _Insurance_Premium_9_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_9( double x ) { return Insurance_Premium_9.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_10_Arguments_xjal = _Insurance_Premium_10_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_10_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_10_Values_xjal = _Insurance_Premium_10_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_10_Values_xjal() {
    return new double[] { 1.0, 1.0, 1262.17,  };
  }

  /**
   * Insurance_Premium_10 Table Function
   */
  public static final TableFunction Insurance_Premium_10 = new TableFunction( _Insurance_Premium_10_Arguments_xjal, _Insurance_Premium_10_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_10( double x ) { return Insurance_Premium_10.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_3_Arguments_xjal = _Insurance_Premium_3_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_3_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_3_Values_xjal = _Insurance_Premium_3_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_3_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.61,  };
  }

  /**
   * Insurance_Premium_3 Table Function
   */
  public static final TableFunction Insurance_Premium_3 = new TableFunction( _Insurance_Premium_3_Arguments_xjal, _Insurance_Premium_3_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_3( double x ) { return Insurance_Premium_3.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_4_Arguments_xjal = _Insurance_Premium_4_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_4_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_4_Values_xjal = _Insurance_Premium_4_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_4_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.884,  };
  }

  /**
   * Insurance_Premium_4 Table Function
   */
  public static final TableFunction Insurance_Premium_4 = new TableFunction( _Insurance_Premium_4_Arguments_xjal, _Insurance_Premium_4_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_4( double x ) { return Insurance_Premium_4.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_1_Arguments_xjal = _Insurance_Premium_1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 557.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_1_Values_xjal = _Insurance_Premium_1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _Insurance_Premium_1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.173,  };
  }

  /**
   * Insurance_Premium_1 Table Function
   */
  public static final TableFunction Insurance_Premium_1 = new TableFunction( _Insurance_Premium_1_Arguments_xjal, _Insurance_Premium_1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double Insurance_Premium_1( double x ) { return Insurance_Premium_1.get( x ); }

  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme1_Arguments_xjal = _OCgrowthInsuranceExtreme1_Arguments_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme1_Arguments_xjal() {
    return new double[] { 0.0, 171.0, 567.0,  };
  }
  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme1_Values_xjal = _OCgrowthInsuranceExtreme1_Values_xjal();
  @AnyLogicInternalCodegenAPI
  private final static double[] _OCgrowthInsuranceExtreme1_Values_xjal() {
    return new double[] { 1.0, 1.0, 1.18,  };
  }

  /**
   * OCgrowthInsuranceExtreme1 Table Function
   */
  public static final TableFunction OCgrowthInsuranceExtreme1 = new TableFunction( _OCgrowthInsuranceExtreme1_Arguments_xjal, _OCgrowthInsuranceExtreme1_Values_xjal, 
       TableFunction.INTERPOLATION_LINEAR, 1, TableFunction.OUTOFRANGE_ERROR,
       0.0 );
  
  public static final double OCgrowthInsuranceExtreme1( double x ) { return OCgrowthInsuranceExtreme1.get( x ); }
  // Analysis Data Elements
  /**
   * Auto-created data set(s) for OwnershipDemand
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OwnershipDemand = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OwnershipDemand );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for PotentialOwner
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_PotentialOwner = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.PotentialOwner );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for NormalRent
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_NormalRent = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.NormalRent );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for RentalDemand
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_RentalDemand = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.RentalDemand );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for OwnershipCost
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OwnershipCost = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OwnershipCost );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for C32
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_C32 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.C32 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for C12
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_C12 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.C12 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for C22
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_C22 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.C22 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for RentImpact
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_RentImpact = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.RentImpact );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for NormalPrice
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_NormalPrice = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.NormalPrice );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for AvgLife
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_AvgLife = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.AvgLife );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for SalesSupply
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_SalesSupply = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.SalesSupply );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for RentalSupply
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_RentalSupply = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.RentalSupply );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for DispIncome
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_DispIncome = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.DispIncome );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Householdsize
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Householdsize = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Householdsize );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for C00
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_C00 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.C00 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Coef
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Coef = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Coef );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for InitialOwnershipCost
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_InitialOwnershipCost = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.InitialOwnershipCost );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for SupplyCoef
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_SupplyCoef = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.SupplyCoef );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for AverageOwnershiptime
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_AverageOwnershiptime = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.AverageOwnershiptime );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Vout1
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Vout1 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Vout1 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Vout2
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Vout2 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Vout2 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for AverageRentalStay
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_AverageRentalStay = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.AverageRentalStay );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for OwningRatio
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OwningRatio = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OwningRatio );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for C000
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_C000 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.C000 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for OW
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OW = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OW );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for SW
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_SW = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.SW );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Population
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Population = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Population );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for OCgrowth
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OCgrowth = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OCgrowth );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for STD
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_STD = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.STD );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for IncomeTrend
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_IncomeTrend = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.IncomeTrend );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Productivity
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Productivity = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Productivity );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for GDP_Differene
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_GDP_Differene = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.GDP_Differene );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for CL
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_CL = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.CL );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Supply_Function
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Supply_Function = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Supply_Function );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Total_Occ
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Total_Occ = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Total_Occ );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Demolish
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Demolish = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Demolish );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for OC_Real_Out
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OC_Real_Out = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OC_Real_Out );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for homelesness_ratio
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_homelesness_ratio = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.homelesness_ratio );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for CC
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_CC = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.CC );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for PUncertainty
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_PUncertainty = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.PUncertainty );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for OCgrowth1
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OCgrowth1 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OCgrowth1 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for c
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_c = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.c );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for d
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_d = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.d );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for cd
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_cd = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.cd );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for ConstructionStartRate
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_ConstructionStartRate = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.ConstructionStartRate );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for ConsCompleRate
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_ConsCompleRate = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.ConsCompleRate );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Demolition
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Demolition = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Demolition );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for SalesPriceChange
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_SalesPriceChange = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.SalesPriceChange );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for RentPriceChange
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_RentPriceChange = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.RentPriceChange );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Demolition1
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Demolition1 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Demolition1 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Rate1
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Rate1 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Rate1 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Rate2
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Rate2 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Rate2 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for OctoDi1
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_OctoDi1 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.OctoDi1 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for RetoDi2
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_RetoDi2 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.RetoDi2 );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Discharge_effect
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Discharge_effect = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Discharge_effect );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Out
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Out = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Out );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Vacant
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Vacant = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Vacant );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for UnderConstruction
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_UnderConstruction = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.UnderConstruction );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Occupied
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Occupied = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Occupied );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for SalesPrice
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_SalesPrice = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.SalesPrice );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for RentPrice
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_RentPrice = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.RentPrice );
      _lastUpdateTime = time();
    }
  } );
  /**
   * Auto-created data set(s) for Rented
   */
  @AnyLogicInternalCodegenAPI
  public DataSet _ds_Rented = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateTime = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateTime ) { return; }
      _d.add( time(), Main.this.Rented );
      _lastUpdateTime = time();
    }
  } );
  public DataSet Real_Num_Dwellings1 = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Real_Num_Dwellings1_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Real_Num_Dwellings1_YValue() {
    return 
ConstructionStartRate 
;
  }
  
  public DataSet RealPrice = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _RealPrice_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _RealPrice_YValue() {
    return 
PriceABS(time()) 
;
  }
  
  public DataSet SimulatedPrice = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _SimulatedPrice_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _SimulatedPrice_YValue() {
    return 
SalesPrice 
;
  }
  
  public DataSet RealRent = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _RealRent_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _RealRent_YValue() {
    return 
Rent(time()) 
;
  }
  
  public DataSet RealRented = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _RealRented_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _RealRented_YValue() {
    return 
RentedABS(time())*1000 
;
  }
  
  public DataSet RealOccupied = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _RealOccupied_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _RealOccupied_YValue() {
    return 
OccupiedABS(time())*1000 
;
  }
  
  public DataSet RealConstructionStartRateABS = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _RealConstructionStartRateABS_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _RealConstructionStartRateABS_YValue() {
    return 
ConstructionStartRateABS(time()) 
;
  }
  
  public DataSet SimulatedConstructionStartRate = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _SimulatedConstructionStartRate_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _SimulatedConstructionStartRate_YValue() {
    return 
Supply_Function 
;
  }
  
  public DataSet SimulatedRent = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _SimulatedRent_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _SimulatedRent_YValue() {
    return 
RentPrice 
;
  }
  
  public DataSet SupplySalesdata = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _SupplySalesdata_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _SupplySalesdata_YValue() {
    return 
SalesSupply 
;
  }
  
  public DataSet OwnershipDemanddata = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _OwnershipDemanddata_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _OwnershipDemanddata_YValue() {
    return 
OwnershipDemand 
;
  }
  
  public DataSet SupplyRentdata = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _SupplyRentdata_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _SupplyRentdata_YValue() {
    return 
RentalSupply 
;
  }
  
  public DataSet RentalDemanddata = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _RentalDemanddata_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _RentalDemanddata_YValue() {
    return 
RentalDemand 
;
  }
  
  public DataSet SimulatedOccupied = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _SimulatedOccupied_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _SimulatedOccupied_YValue() {
    return 
Occupied 
;
  }
  
  public DataSet SimulatedRented = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _SimulatedRented_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _SimulatedRented_YValue() {
    return 
Rented 
;
  }
  
  public DataSet Simlationpop = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Simlationpop_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Simlationpop_YValue() {
    return 
Population/Householdsize 
;
  }
  
  public DataSet NumUnits = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _NumUnits_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _NumUnits_YValue() {
    return 
Occupied+Rented+Vacant 
;
  }
  
  public DataSet Demolition_Data = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Demolition_Data_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Demolition_Data_YValue() {
    return 
Demolition + Demolition1 
;
  }
  
  public DataSet OC_Out = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _OC_Out_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _OC_Out_YValue() {
    return 
OC_Real_Out 
;
  }
  
  public DataSet Disp_Income_Out = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Disp_Income_Out_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Disp_Income_Out_YValue() {
    return 
IncomeTrend 
;
  }
  
  public DataSet Homeless = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Homeless_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Homeless_YValue() {
    return 
homelesness_ratio 
;
  }
  
  public DataSet dataset = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _dataset_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _dataset_YValue() {
    return 
SalesPrice 
;
  }
  
  public DataSet dataset1 = new DataSet( 100, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _dataset1_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _dataset1_YValue() {
    return 
RentPrice 
;
  }
  
  public DataSet Vacant00 = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Vacant00_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Vacant00_YValue() {
    return 
Vacant 
;
  }
  
  public DataSet Average_Income = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Average_Income_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Average_Income_YValue() {
    return 
1000*IncomeTrend/RentPrice 
;
  }
  
  public DataSet STD_Income = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _STD_Income_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _STD_Income_YValue() {
    return 
STD 
;
  }
  
  public DataSet Incomeoverownership = new DataSet( 550, new DataUpdater_xjal() {
    double _lastUpdateX = Double.NaN;
    @Override
    public void update( DataSet _d ) {
      if ( time() == _lastUpdateX ) { return; }
      _d.add( time(), _Incomeoverownership_YValue() );
      _lastUpdateX = time();
    }
    @Override
    public double getDataXValue() {
      return time();
    }
  } );

  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  private double _Incomeoverownership_YValue() {
    return 
1000*IncomeTrend/(OC_Real_Out*SalesPrice) 
;
  }
  
  // View areas
  public ViewArea _origin_VA = new ViewArea( this, "[Origin]", 0, 0, 1000.0, 600.0 );
  @Override
  @AnyLogicInternalCodegenAPI
  public int getViewAreas(Map<String, ViewArea> _output) {
    if ( _output != null ) {
      _output.put( "_origin_VA", this._origin_VA );
    }
    return 1 + super.getViewAreas( _output );
  }
  /** Internal constant, shouldn't be accessed by user */
  @AnyLogicInternalCodegenAPI
  protected static final int _SHAPE_NEXT_ID_xjal = 1;

  @AnyLogicInternalCodegenAPI
  public boolean isPublicPresentationDefined() {
    return false;
  }

  @AnyLogicInternalCodegenAPI
  public boolean isEmbeddedAgentPresentationVisible( Agent _a ) {
    return super.isEmbeddedAgentPresentationVisible( _a );
  }
  @AnyLogicInternalCodegenAPI
  private void _initialize_level_xjal() {
	  level.addAll();
  }

  protected com.anylogic.engine.markup.Level level;

  private com.anylogic.engine.markup.Level[] _getLevels_xjal;

  @Override
  public com.anylogic.engine.markup.Level[] getLevels() {
    return _getLevels_xjal;
  }

  @AnyLogicInternalCodegenAPI
  private void _createPersistentElementsBP0_xjal() {
  }

  @AnyLogicInternalCodegenAPI
  private void _createPersistentElementsAP0_xjal() {
  }

  @AnyLogicInternalCodegenAPI
  private void _createPersistentElementsBS0_xjal() {
  }


  // Static initialization of persistent elements
  private void instantiatePersistentElements_xjal() {
    level = new com.anylogic.engine.markup.Level(this, "level", SHAPE_DRAW_2D3D, 0.0, true, true);  			
	_getLevels_xjal = new com.anylogic.engine.markup.Level[] { 
      level };
    _createPersistentElementsBP0_xjal();
  }
  protected ShapeTopLevelPresentationGroup presentation;
  protected ShapeModelElementsGroup icon; 

  @Override
  @AnyLogicInternalCodegenAPI
  public ShapeTopLevelPresentationGroup getPresentationShape() {
    return presentation;
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public ShapeModelElementsGroup getModelElementsShape() {
    return icon;
  }

	


  /**
   * Constructor
   */
  public Main( Engine engine, Agent owner, AgentList<? extends Main> ownerPopulation ) {
    super( engine, owner, ownerPopulation );
    instantiateBaseStructureThis_xjal();
  }

  @AnyLogicInternalCodegenAPI
  public void onOwnerChanged_xjal() {
    super.onOwnerChanged_xjal();
    setupReferences_xjal();
  }

  @AnyLogicInternalCodegenAPI
  public void instantiateBaseStructure_xjal() {
    super.instantiateBaseStructure_xjal();
    instantiateBaseStructureThis_xjal();
  }
  
  @AnyLogicInternalCodegenAPI
  private void instantiateBaseStructureThis_xjal() {
	instantiatePersistentElements_xjal();
    setupReferences_xjal();
    exceloutputFile.readFile();
    // Registering in Engine continuous part
    getEngine().registerAgentWithEquations( this );
  }
  
  @AnyLogicInternalCodegenAPI
  private void setupReferences_xjal() {
  }
  
  /**
   * Simple constructor. Please add created agent to some population by calling goToPopulation() function
   */
  public Main() {
  }
  
  /**
   * Simple constructor. Please add created agent to some population by calling goToPopulation() function
   */
  public Main( double TransactionTime, double BushfireRate, double C14, double C24, double C34, double TransactionTime1, double AverageBuildingLife, double C36, double C16, double C26, double IniVacant, double Coefficient, double C01, double TimeToAdopt, double TimeToAdopt2, double C001, double a, double b ) {
    markParametersAreSet();
    this.TransactionTime = TransactionTime;
    this.BushfireRate = BushfireRate;
    this.C14 = C14;
    this.C24 = C24;
    this.C34 = C34;
    this.TransactionTime1 = TransactionTime1;
    this.AverageBuildingLife = AverageBuildingLife;
    this.C36 = C36;
    this.C16 = C16;
    this.C26 = C26;
    this.IniVacant = IniVacant;
    this.Coefficient = Coefficient;
    this.C01 = C01;
    this.TimeToAdopt = TimeToAdopt;
    this.TimeToAdopt2 = TimeToAdopt2;
    this.C001 = C001;
    this.a = a;
    this.b = b;
  }
  
  @Override
  @AnyLogicInternalCodegenAPI
  public void doCreate() {
    super.doCreate();
    // Assigning initial values for plain variables
    setupPlainVariables_Main_xjal();
    // Dynamic initialization of persistent elements
    _createPersistentElementsAP0_xjal();
	_initialize_level_xjal();
    level.initialize();
    presentation = new ShapeTopLevelPresentationGroup( Main.this, true, 0, 0, 0, 0 , level );
    icon = new ShapeModelElementsGroup( Main.this, getElementProperty( "stock_flow_sd.Main.icon", IElementDescriptor.MODEL_ELEMENT_DESCRIPTORS )  );
    icon.setIconOffsets( 0.0, 0.0 );
	 // Port connectors with non-replicated objects
    // Creating replicated embedded objects
    setupInitialConditions_xjal( Main.class );
    // Dynamic initialization of persistent elements
    _createPersistentElementsBS0_xjal();
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public void doStart() {
    super.doStart();
    _Real_Num_Dwellings1_autoUpdateEvent_xjal.start();
    _RealPrice_autoUpdateEvent_xjal.start();
    _SimulatedPrice_autoUpdateEvent_xjal.start();
    _RealRent_autoUpdateEvent_xjal.start();
    _RealRented_autoUpdateEvent_xjal.start();
    _RealOccupied_autoUpdateEvent_xjal.start();
    _RealConstructionStartRateABS_autoUpdateEvent_xjal.start();
    _SimulatedConstructionStartRate_autoUpdateEvent_xjal.start();
    _SimulatedRent_autoUpdateEvent_xjal.start();
    _SupplySalesdata_autoUpdateEvent_xjal.start();
    _OwnershipDemanddata_autoUpdateEvent_xjal.start();
    _SupplyRentdata_autoUpdateEvent_xjal.start();
    _RentalDemanddata_autoUpdateEvent_xjal.start();
    _SimulatedOccupied_autoUpdateEvent_xjal.start();
    _SimulatedRented_autoUpdateEvent_xjal.start();
    _Simlationpop_autoUpdateEvent_xjal.start();
    _NumUnits_autoUpdateEvent_xjal.start();
    _Demolition_Data_autoUpdateEvent_xjal.start();
    _OC_Out_autoUpdateEvent_xjal.start();
    _Disp_Income_Out_autoUpdateEvent_xjal.start();
    _Homeless_autoUpdateEvent_xjal.start();
    _Vacant00_autoUpdateEvent_xjal.start();
    _Average_Income_autoUpdateEvent_xjal.start();
    _STD_Income_autoUpdateEvent_xjal.start();
    _Incomeoverownership_autoUpdateEvent_xjal.start();
    _autoCreatedDS_xjal.start();
  }
 

  /**
   * Assigning initial values for plain variables<br>
   * <em>This method isn't designed to be called by user and may be removed in future releases.</em>
   */
  @AnyLogicInternalCodegenAPI
  public void setupPlainVariables_xjal() {
    setupPlainVariables_Main_xjal();
  }

  /**
   * Assigning initial values for plain variables<br>
   * <em>This method isn't designed to be called by user and may be removed in future releases.</em>
   */
  @AnyLogicInternalCodegenAPI
  private void setupPlainVariables_Main_xjal() {
  }

  // User API -----------------------------------------------------
  @AnyLogicInternalCodegenAPI
  public static LinkToAgentAnimationSettings _connections_commonAnimationSettings_xjal = new LinkToAgentAnimationSettingsImpl( false, black, 1.0, LINE_STYLE_SOLID, ARROW_NONE, 0.0 );

  public LinkToAgentCollection<Agent, Agent> connections = new LinkToAgentStandardImpl<Agent, Agent>(this, _connections_commonAnimationSettings_xjal);
  @Override
  public LinkToAgentCollection<? extends Agent, ? extends Agent> getLinkToAgentStandard_xjal() {
    return connections;
  }


  @AnyLogicInternalCodegenAPI
  public void drawLinksToAgents(boolean _underAgents_xjal, LinkToAgentAnimator _animator_xjal) {
    super.drawLinksToAgents(_underAgents_xjal, _animator_xjal);
    if ( _underAgents_xjal ) {
      _animator_xjal.drawLink( this, connections, true, true );
    }
  }

  public AgentList<? extends Main> getPopulation() {
    return (AgentList<? extends Main>) super.getPopulation();
  }

  public List<? extends Main> agentsInRange( double distance ) {
    return (List<? extends Main>) super.agentsInRange( distance );
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public boolean isLoggingToDB(EventOriginator _e) {
    if ( _e == _Real_Num_Dwellings1_autoUpdateEvent_xjal ) return false;
    if ( _e == _RealPrice_autoUpdateEvent_xjal ) return false;
    if ( _e == _SimulatedPrice_autoUpdateEvent_xjal ) return false;
    if ( _e == _RealRent_autoUpdateEvent_xjal ) return false;
    if ( _e == _RealRented_autoUpdateEvent_xjal ) return false;
    if ( _e == _RealOccupied_autoUpdateEvent_xjal ) return false;
    if ( _e == _RealConstructionStartRateABS_autoUpdateEvent_xjal ) return false;
    if ( _e == _SimulatedConstructionStartRate_autoUpdateEvent_xjal ) return false;
    if ( _e == _SimulatedRent_autoUpdateEvent_xjal ) return false;
    if ( _e == _SupplySalesdata_autoUpdateEvent_xjal ) return false;
    if ( _e == _OwnershipDemanddata_autoUpdateEvent_xjal ) return false;
    if ( _e == _SupplyRentdata_autoUpdateEvent_xjal ) return false;
    if ( _e == _RentalDemanddata_autoUpdateEvent_xjal ) return false;
    if ( _e == _SimulatedOccupied_autoUpdateEvent_xjal ) return false;
    if ( _e == _SimulatedRented_autoUpdateEvent_xjal ) return false;
    if ( _e == _Simlationpop_autoUpdateEvent_xjal ) return false;
    if ( _e == _NumUnits_autoUpdateEvent_xjal ) return false;
    if ( _e == _Demolition_Data_autoUpdateEvent_xjal ) return false;
    if ( _e == _OC_Out_autoUpdateEvent_xjal ) return false;
    if ( _e == _Disp_Income_Out_autoUpdateEvent_xjal ) return false;
    if ( _e == _Homeless_autoUpdateEvent_xjal ) return false;
    if ( _e == _Vacant00_autoUpdateEvent_xjal ) return false;
    if ( _e == _Average_Income_autoUpdateEvent_xjal ) return false;
    if ( _e == _STD_Income_autoUpdateEvent_xjal ) return false;
    if ( _e == _Incomeoverownership_autoUpdateEvent_xjal ) return false;
    if ( _e == _autoCreatedDS_xjal ) return false;
    return super.isLoggingToDB( _e );
  }

  @AnyLogicInternalCodegenAPI
  public void onDestroy() {
    _Real_Num_Dwellings1_autoUpdateEvent_xjal.onDestroy();
    _RealPrice_autoUpdateEvent_xjal.onDestroy();
    _SimulatedPrice_autoUpdateEvent_xjal.onDestroy();
    _RealRent_autoUpdateEvent_xjal.onDestroy();
    _RealRented_autoUpdateEvent_xjal.onDestroy();
    _RealOccupied_autoUpdateEvent_xjal.onDestroy();
    _RealConstructionStartRateABS_autoUpdateEvent_xjal.onDestroy();
    _SimulatedConstructionStartRate_autoUpdateEvent_xjal.onDestroy();
    _SimulatedRent_autoUpdateEvent_xjal.onDestroy();
    _SupplySalesdata_autoUpdateEvent_xjal.onDestroy();
    _OwnershipDemanddata_autoUpdateEvent_xjal.onDestroy();
    _SupplyRentdata_autoUpdateEvent_xjal.onDestroy();
    _RentalDemanddata_autoUpdateEvent_xjal.onDestroy();
    _SimulatedOccupied_autoUpdateEvent_xjal.onDestroy();
    _SimulatedRented_autoUpdateEvent_xjal.onDestroy();
    _Simlationpop_autoUpdateEvent_xjal.onDestroy();
    _NumUnits_autoUpdateEvent_xjal.onDestroy();
    _Demolition_Data_autoUpdateEvent_xjal.onDestroy();
    _OC_Out_autoUpdateEvent_xjal.onDestroy();
    _Disp_Income_Out_autoUpdateEvent_xjal.onDestroy();
    _Homeless_autoUpdateEvent_xjal.onDestroy();
    _Vacant00_autoUpdateEvent_xjal.onDestroy();
    _Average_Income_autoUpdateEvent_xjal.onDestroy();
    _STD_Income_autoUpdateEvent_xjal.onDestroy();
    _Incomeoverownership_autoUpdateEvent_xjal.onDestroy();
    _autoCreatedDS_xjal.onDestroy();
    // Unregistering in Engine continuous part
    getEngine().unregisterAgentWithEquations( this );
    // On destroy code
    
this.writeOutput(); 
    exceloutputFile.writeFile();
  // Analysis Data Elements
    _ds_OwnershipDemand.destroyUpdater_xjal();
    _ds_PotentialOwner.destroyUpdater_xjal();
    _ds_NormalRent.destroyUpdater_xjal();
    _ds_RentalDemand.destroyUpdater_xjal();
    _ds_OwnershipCost.destroyUpdater_xjal();
    _ds_C32.destroyUpdater_xjal();
    _ds_C12.destroyUpdater_xjal();
    _ds_C22.destroyUpdater_xjal();
    _ds_RentImpact.destroyUpdater_xjal();
    _ds_NormalPrice.destroyUpdater_xjal();
    _ds_AvgLife.destroyUpdater_xjal();
    _ds_SalesSupply.destroyUpdater_xjal();
    _ds_RentalSupply.destroyUpdater_xjal();
    _ds_DispIncome.destroyUpdater_xjal();
    _ds_Householdsize.destroyUpdater_xjal();
    _ds_C00.destroyUpdater_xjal();
    _ds_Coef.destroyUpdater_xjal();
    _ds_InitialOwnershipCost.destroyUpdater_xjal();
    _ds_SupplyCoef.destroyUpdater_xjal();
    _ds_AverageOwnershiptime.destroyUpdater_xjal();
    _ds_Vout1.destroyUpdater_xjal();
    _ds_Vout2.destroyUpdater_xjal();
    _ds_AverageRentalStay.destroyUpdater_xjal();
    _ds_OwningRatio.destroyUpdater_xjal();
    _ds_C000.destroyUpdater_xjal();
    _ds_OW.destroyUpdater_xjal();
    _ds_SW.destroyUpdater_xjal();
    _ds_Population.destroyUpdater_xjal();
    _ds_OCgrowth.destroyUpdater_xjal();
    _ds_STD.destroyUpdater_xjal();
    _ds_IncomeTrend.destroyUpdater_xjal();
    _ds_Productivity.destroyUpdater_xjal();
    _ds_GDP_Differene.destroyUpdater_xjal();
    _ds_CL.destroyUpdater_xjal();
    _ds_Supply_Function.destroyUpdater_xjal();
    _ds_Total_Occ.destroyUpdater_xjal();
    _ds_Demolish.destroyUpdater_xjal();
    _ds_OC_Real_Out.destroyUpdater_xjal();
    _ds_homelesness_ratio.destroyUpdater_xjal();
    _ds_CC.destroyUpdater_xjal();
    _ds_PUncertainty.destroyUpdater_xjal();
    _ds_OCgrowth1.destroyUpdater_xjal();
    _ds_c.destroyUpdater_xjal();
    _ds_d.destroyUpdater_xjal();
    _ds_cd.destroyUpdater_xjal();
    _ds_ConstructionStartRate.destroyUpdater_xjal();
    _ds_ConsCompleRate.destroyUpdater_xjal();
    _ds_Demolition.destroyUpdater_xjal();
    _ds_SalesPriceChange.destroyUpdater_xjal();
    _ds_RentPriceChange.destroyUpdater_xjal();
    _ds_Demolition1.destroyUpdater_xjal();
    _ds_Rate1.destroyUpdater_xjal();
    _ds_Rate2.destroyUpdater_xjal();
    _ds_OctoDi1.destroyUpdater_xjal();
    _ds_RetoDi2.destroyUpdater_xjal();
    _ds_Discharge_effect.destroyUpdater_xjal();
    _ds_Out.destroyUpdater_xjal();
    _ds_Vacant.destroyUpdater_xjal();
    _ds_UnderConstruction.destroyUpdater_xjal();
    _ds_Occupied.destroyUpdater_xjal();
    _ds_SalesPrice.destroyUpdater_xjal();
    _ds_RentPrice.destroyUpdater_xjal();
    _ds_Rented.destroyUpdater_xjal();
    Real_Num_Dwellings1.destroyUpdater_xjal();
    RealPrice.destroyUpdater_xjal();
    SimulatedPrice.destroyUpdater_xjal();
    RealRent.destroyUpdater_xjal();
    RealRented.destroyUpdater_xjal();
    RealOccupied.destroyUpdater_xjal();
    RealConstructionStartRateABS.destroyUpdater_xjal();
    SimulatedConstructionStartRate.destroyUpdater_xjal();
    SimulatedRent.destroyUpdater_xjal();
    SupplySalesdata.destroyUpdater_xjal();
    OwnershipDemanddata.destroyUpdater_xjal();
    SupplyRentdata.destroyUpdater_xjal();
    RentalDemanddata.destroyUpdater_xjal();
    SimulatedOccupied.destroyUpdater_xjal();
    SimulatedRented.destroyUpdater_xjal();
    Simlationpop.destroyUpdater_xjal();
    NumUnits.destroyUpdater_xjal();
    Demolition_Data.destroyUpdater_xjal();
    OC_Out.destroyUpdater_xjal();
    Disp_Income_Out.destroyUpdater_xjal();
    Homeless.destroyUpdater_xjal();
    dataset.destroyUpdater_xjal();
    dataset1.destroyUpdater_xjal();
    Vacant00.destroyUpdater_xjal();
    Average_Income.destroyUpdater_xjal();
    STD_Income.destroyUpdater_xjal();
    Incomeoverownership.destroyUpdater_xjal();
    logToDB( Real_Num_Dwellings1, "Real_Num_Dwellings1" );
    logToDB( RealPrice, "RealPrice" );
    logToDB( SimulatedPrice, "SimulatedPrice" );
    logToDB( RealRent, "RealRent" );
    logToDB( RealRented, "RealRented" );
    logToDB( RealOccupied, "RealOccupied" );
    logToDB( RealConstructionStartRateABS, "RealConstructionStartRateABS" );
    logToDB( SimulatedConstructionStartRate, "SimulatedConstructionStartRate" );
    logToDB( SimulatedRent, "SimulatedRent" );
    logToDB( SupplySalesdata, "SupplySalesdata" );
    logToDB( OwnershipDemanddata, "OwnershipDemanddata" );
    logToDB( SupplyRentdata, "SupplyRentdata" );
    logToDB( RentalDemanddata, "RentalDemanddata" );
    logToDB( SimulatedOccupied, "SimulatedOccupied" );
    logToDB( SimulatedRented, "SimulatedRented" );
    logToDB( Simlationpop, "Simlationpop" );
    logToDB( NumUnits, "NumUnits" );
    logToDB( Demolition_Data, "Demolition_Data" );
    logToDB( OC_Out, "OC_Out" );
    logToDB( Disp_Income_Out, "Disp_Income_Out" );
    logToDB( Homeless, "Homeless" );
    logToDB( dataset, "dataset" );
    logToDB( dataset1, "dataset1" );
    logToDB( Vacant00, "Vacant00" );
    logToDB( Average_Income, "Average_Income" );
    logToDB( STD_Income, "STD_Income" );
    logToDB( Incomeoverownership, "Incomeoverownership" );
    super.onDestroy();
  }

  // Additional class code

double lognormal_inverse(double x, double y, double z){
	LogNormalDistribution logNormal = new LogNormalDistribution(x, y);
	double inversecdf = logNormal.inverseCumulativeProbability(z);
	return inversecdf;
}

double lognormal_cdf(double x, double y, double z){
	LogNormalDistribution logNormal = new LogNormalDistribution(x, y);
	double inversecdf = logNormal.cumulativeProbability(z);
	return inversecdf;
}
double normal_inverse(double x){
	NormalDistribution standardNormal = new NormalDistribution(0, 1);
	double inversecdf = standardNormal.inverseCumulativeProbability(x);
	return inversecdf;
}

double CRate(double x, double y){
	if (time()<0){
		return x;
	}
	else {
		return y;
	}
}


double CRate10(double x, double y){
	if (time()<171){
		return x;
	}
	else {
		return y;
	}
}

double CRatein(double x, double y){
	if (time()<171){
		return x;
	}
	else {
		return y;
	}
}

double CRate3(double x, double y){
	if (time()<171){
		return x;
	}
	else {
		return y;
	}
}

double CRate2(double x, double y){
	if (time()<6){
		return x;
	}
	else {
		return y;
	}
}

double Rate(double x, double y, double t){
	if (time()<t){
		return x;
	}
	else {
		return y;
	}
}


 
  // End of additional class code


}
